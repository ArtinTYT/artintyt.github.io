<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>重要通知：网站更新计划变更</title>
    <link href="/2025/04/20/test/"/>
    <url>/2025/04/20/test/</url>
    
    <content type="html"><![CDATA[<h1>重要通知：网站更新计划变更</h1><p>自 2025年4月20日 起，建站内容将全面转向 AI Agent 自动更新。</p><p>其他内容聚焦 机器学习（ML）、深度学习（DL）、大语言模型（LLMs） 等领域的核心思考，不再更新建站相关技术分享。</p><p>历史文章仍可查阅，感谢支持，未来一起探索 AI 前沿！</p>]]></content>
    
    
    
    <tags>
      
      <tag>通知</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2.RNN相关基础知识</title>
    <link href="/2025/04/17/5-2-RNN%E7%9B%B8%E5%85%B3%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/04/17/5-2-RNN%E7%9B%B8%E5%85%B3%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1>2. RNN 相关技术</h1><h2 id="1-潜变量自回归模型与RNN"><a class="header-anchor" href="#1-潜变量自回归模型与RNN"> </a>1. 潜变量自回归模型与RNN</h2><ul><li>RNN用<strong>潜变量 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.068ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 914.3 851.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container> 总结历史信息</strong>，适合处理序列数据。</li><li><strong>隐藏状态更新公式</strong>：$$h_t = \phi(W_{hh} h_{t-1} + W_{hx} x_t + b_h)$$<ul><li><p><mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.068ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 914.3 851.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container>：当前时间步的隐藏状态（记忆）</p></li><li><p><mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.113ex" height="2.041ex" role="img" focusable="false" viewBox="0 -694 1817.9 902" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(609,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>：上一个时间步的隐藏状态（过去的记忆）</p></li><li><p><mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.059ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 910.3 599.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container>：当前输入（如词向量）</p></li><li><p><mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="9.333ex" height="1.984ex" role="img" focusable="false" viewBox="0 -683 4125 877" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(977,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(576,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(1841.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2286.3,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(977,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(576,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>W</mi><mrow data-mjx-texclass="ORD"><mi>h</mi><mi>h</mi></mrow></msub><mo>,</mo><msub><mi>W</mi><mrow data-mjx-texclass="ORD"><mi>h</mi><mi>x</mi></mrow></msub></math></mjx-assistive-mml></mjx-container>：可学习的权重矩阵，用于融合历史和当前输入</p></li><li><p><mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>b</mi></math></mjx-assistive-mml></mjx-container>：偏置项</p></li><li><p><mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.348ex" height="2.034ex" role="img" focusable="false" viewBox="0 -694 596 899" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D719" d="M409 688Q413 694 421 694H429H442Q448 688 448 686Q448 679 418 563Q411 535 404 504T392 458L388 442Q388 441 397 441T429 435T477 418Q521 397 550 357T579 260T548 151T471 65T374 11T279 -10H275L251 -105Q245 -128 238 -160Q230 -192 227 -198T215 -205H209Q189 -205 189 -198Q189 -193 211 -103L234 -11Q234 -10 226 -10Q221 -10 206 -8T161 6T107 36T62 89T43 171Q43 231 76 284T157 370T254 422T342 441Q347 441 348 445L378 567Q409 686 409 688ZM122 150Q122 116 134 91T167 53T203 35T237 27H244L337 404Q333 404 326 403T297 395T255 379T211 350T170 304Q152 276 137 237Q122 191 122 150ZM500 282Q500 320 484 347T444 385T405 400T381 404H378L332 217L284 29Q284 27 285 27Q293 27 317 33T357 47Q400 66 431 100T475 170T494 234T500 282Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>ϕ</mi></math></mjx-assistive-mml></mjx-container>：激活函数（如 tanh 或 ReLU），引入非线性</p></li><li><p>如果去掉 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="8.279ex" height="2.041ex" role="img" focusable="false" viewBox="0 -694 3659.5 902" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(977,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(576,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(1841.6,0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(609,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>W</mi><mrow data-mjx-texclass="ORD"><mi>h</mi><mi>h</mi></mrow></msub><msub><mi>h</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>，RNN就退化成普通的MLP。</p></li><li><p>RNN 把过去的记忆 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.113ex" height="2.041ex" role="img" focusable="false" viewBox="0 -694 1817.9 902" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(609,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container> 和当前输入 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.059ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 910.3 599.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container> 融合，经过变换和激活函数，得到新的记忆 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.068ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 914.3 851.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container>。这就是它记住上下文的方式。</p></li><li><p><strong>输出层公式</strong>：<mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="15.669ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 6925.7 851.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1101,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(2156.8,0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(977,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(576,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="msub" transform="translate(3934.1,0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(5070.5,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(6070.8,0)"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(462,-150) scale(0.707)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>o</mi><mi>t</mi></msub><mo>=</mo><msub><mi>W</mi><mrow data-mjx-texclass="ORD"><mi>h</mi><mi>o</mi></mrow></msub><msub><mi>h</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mi>o</mi></msub></math></mjx-assistive-mml></mjx-container></p></li><li><p><strong>训练目标</strong>：用当前词 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.059ex" height="1.357ex" role="img" focusable="false" viewBox="0 -442 910.3 599.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container> 和前一状态 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.113ex" height="2.041ex" role="img" focusable="false" viewBox="0 -694 1817.9 902" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(609,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container> 计算 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="2.068ex" height="1.927ex" role="img" focusable="false" viewBox="0 -694 914.3 851.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container>，再预测下一个词 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.104ex" height="1.471ex" role="img" focusable="false" viewBox="0 -442 1813.9 650" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container>，损失函数比较 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="1.863ex" height="1.355ex" role="img" focusable="false" viewBox="0 -441 823.3 598.8" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(518,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>o</mi><mi>t</mi></msub></math></mjx-assistive-mml></mjx-container> 与 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.471ex;" xmlns="http://www.w3.org/2000/svg" width="4.104ex" height="1.471ex" role="img" focusable="false" viewBox="0 -442 1813.9 650" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub></math></mjx-assistive-mml></mjx-container> 的差异。</p></li></ul></li></ul><h2 id="2-困惑度（Perplexity）"><a class="header-anchor" href="#2-困惑度（Perplexity）"> </a>2. 困惑度（Perplexity）</h2><ul><li>衡量语言模型性能，常用<strong>平均交叉熵</strong>：</li></ul><mjx-container class="MathJax" jax="SVG" display="true" style="direction: ltr; display: block; text-align: center; margin: 1em 0; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -2.819ex;" xmlns="http://www.w3.org/2000/svg" width="32.661ex" height="6.354ex" role="img" focusable="false" viewBox="0 -1562.5 14436 2808.5" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(847.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1903.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mfrac" transform="translate(2681.6,0)"><g data-mml-node="mn" transform="translate(270,676)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(220,-686)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><rect width="800" height="60" x="120" y="220"/></g><g data-mml-node="munderover" transform="translate(3888.2,0)"><g data-mml-node="mo"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(148.2,-1087.9) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mi" transform="translate(509.9,1150) scale(0.707)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mi" transform="translate(5498.9,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" style="stroke-width: 3;"/><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)" style="stroke-width: 3;"/><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(6776.9,0)"><path data-c="2061" d="" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(6943.6,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(7446.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(7835.6,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(8734.5,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(9012.5,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(10021.1,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(10465.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(10910.4,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(11355.1,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(11799.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(12244.4,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(14047,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="block" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; overflow: hidden; width: 100%;"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><mi>π</mi><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo data-mjx-texclass="OP">∑</mo><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>log</mi><mo data-mjx-texclass="NONE">⁡</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo data-mjx-texclass="ORD" stretchy="false">|</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mo>.</mo><mo>.</mo><mo>.</mo><mo>,</mo><msub><mi>x</mi><mrow data-mjx-texclass="ORD"><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container><ul><li>通常用 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.507ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2876 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" style="stroke-width: 3;"/><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(444,0)" style="stroke-width: 3;"/><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(972,0)" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1528,0)"><path data-c="2061" d="" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1528,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(1917,0)"><path data-c="1D70B" d="M132 -11Q98 -11 98 22V33L111 61Q186 219 220 334L228 358H196Q158 358 142 355T103 336Q92 329 81 318T62 297T53 285Q51 284 38 284Q19 284 19 294Q19 300 38 329T93 391T164 429Q171 431 389 431Q549 431 553 430Q573 423 573 402Q573 371 541 360Q535 358 472 358H408L405 341Q393 269 393 222Q393 170 402 129T421 65T431 37Q431 20 417 5T381 -10Q370 -10 363 -7T347 17T331 77Q330 86 330 121Q330 170 339 226T357 318T367 358H269L268 354Q268 351 249 275T206 114T175 17Q164 -11 132 -11Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2487,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>exp</mi><mo data-mjx-texclass="NONE">⁡</mo><mo stretchy="false">(</mo><mi>π</mi><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container> 作为困惑度（perplexity）指标，表示模型对下一个词的不确定性，越小越好。</li><li>完美模型：perplexity=1</li><li>越大越差（极端情况趋于无穷大）</li></ul><h2 id="3-梯度裁剪（Gradient-Clipping）"><a class="header-anchor" href="#3-梯度裁剪（Gradient-Clipping）"> </a>3. 梯度裁剪（Gradient Clipping）</h2><ul><li>RNN 反向传播时，长序列会导致梯度爆炸或消失。</li><li><strong>梯度裁剪</strong>可有效防止梯度爆炸：$$g \leftarrow \min\left(1, \frac{\theta}{|g|}\right) g$$<br>如果梯度范数超过阈值 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.061ex" height="1.618ex" role="img" focusable="false" viewBox="0 -705 469 715" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>θ</mi></math></mjx-assistive-mml></mjx-container>，则按比例缩放到阈值。(i.e. 当 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.564ex;" xmlns="http://www.w3.org/2000/svg" width="6.415ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 2835.6 999" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(755,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(1310.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2366.6,0)"><path data-c="1D703" d="M35 200Q35 302 74 415T180 610T319 704Q320 704 327 704T339 705Q393 701 423 656Q462 596 462 495Q462 380 417 261T302 66T168 -10H161Q125 -10 99 10T60 63T41 130T35 200ZM383 566Q383 668 330 668Q294 668 260 623T204 521T170 421T157 371Q206 370 254 370L351 371Q352 372 359 404T375 484T383 566ZM113 132Q113 26 166 26Q181 26 198 36T239 74T287 161T335 307L340 324H145Q145 321 136 286T120 208T113 132Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo data-mjx-texclass="ORD" stretchy="false">|</mo><mi>g</mi><mo data-mjx-texclass="ORD" stretchy="false">|</mo><mo>&gt;</mo><mi>θ</mi></math></mjx-assistive-mml></mjx-container> 时才裁剪)</li></ul><h2 id="4-RNN常见结构"><a class="header-anchor" href="#4-RNN常见结构"> </a>4. RNN常见结构</h2><ul><li>One to one：MLP（简化版，单输入单输出）</li><li>One to many：文本生成</li><li>Many to one：文本分类</li><li>Many to many：机器翻译、序列标注、问答等</li></ul><h2 id="4-总结"><a class="header-anchor" href="#4-总结"> </a>4. 总结</h2><ul><li>RNN 能处理序列相关性，其<em>输出</em> 由<strong>当前输入</strong>和<strong>历史隐状态</strong>共同决定。</li><li>语言模型中，RNN根据当前词预测下一个词。</li><li>困惑度（perplexity）是衡量语言模型效果的关键指标。</li></ul><h2 id="参考资料"><a class="header-anchor" href="#参考资料"> </a>参考资料</h2><ul><li><a href="https://zh.d2l.ai/chapter_recurrent-neural-networks/language-models-and-dataset.html">动手学深度学习（李沐）：语言模型和数据集</a></li><li><a href="https://zh.d2l.ai/chapter_recurrent-neural-networks/rnn.html">动手学深度学习（李沐）：循环神经网络</a></li><li><a href="https://www.bilibili.com/video/BV1ZX4y1F7K3/">Bilibili 视频讲解：语言模型和数据集</a></li><li><a href="https://www.bilibili.com/video/BV1D64y1z7CA/">Bilibili 视频讲解：循环神经网络</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Deep Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DL</tag>
      
      <tag>RNN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>1.文本预处理</title>
    <link href="/2025/04/17/5-1-%E6%96%87%E6%9C%AC%E9%A2%84%E5%A4%84%E7%90%86/"/>
    <url>/2025/04/17/5-1-%E6%96%87%E6%9C%AC%E9%A2%84%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1>1. 文本预处理</h1><h2 id="1-序列模型"><a class="header-anchor" href="#1-序列模型"> </a>1. 序列模型</h2><ul><li>序列数据（时序结构）：音乐，语言，视频，文本</li><li>建模方法：利用条件概率分解（Chain Rule）建模联合概率： $$P(a,b)= P(a) , P(b|a) = P(b) , P(a|b)$$</li><li>对条件概率的建模主要有两种方案：<ul><li><strong>马尔科夫假设</strong>：只依赖最近 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.029ex;" xmlns="http://www.w3.org/2000/svg" width="1.17ex" height="1.005ex" role="img" focusable="false" viewBox="0 -431 517 444" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D70F" d="M39 284Q18 284 18 294Q18 301 45 338T99 398Q134 425 164 429Q170 431 332 431Q492 431 497 429Q517 424 517 402Q517 388 508 376T485 360Q479 358 389 358T299 356Q298 355 283 274T251 109T233 20Q228 5 215 -4T186 -13Q153 -13 153 20V30L203 192Q214 228 227 272T248 336L254 357Q254 358 208 358Q206 358 197 358T183 359Q105 359 61 295Q56 287 53 286T39 284Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>τ</mi></math></mjx-assistive-mml></mjx-container> 个历史数据点，简化模型复杂度</li><li><strong>潜变量模型</strong>：用潜变量 <mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="19.506ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8621.7 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1192,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2247.8,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2797.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(3186.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(605,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4195.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(4640,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5084.7,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5529.4,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(5974,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(6418.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="TeXAtom" transform="translate(605,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(361,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width: 3;"/></g><g data-mml-node="mn" transform="translate(1139,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width: 3;"/></g></g></g><g data-mml-node="mo" transform="translate(8232.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>h</mi><mi>t</mi></msub><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>,</mo><mo>.</mo><mo>.</mo><mo>.</mo><mo>,</mo><msub><mi>x</mi><mrow data-mjx-texclass="ORD"><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container> 概括历史信息，<mjx-container class="MathJax" jax="SVG" style="direction: ltr; position: relative;"><svg style="overflow: visible; min-height: 1px; min-width: 1px; vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="12.732ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 5627.4 1000" aria-hidden="true"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(1188,0)"><path data-c="223C" d="M55 166Q55 241 101 304T222 367Q260 367 296 349T362 304T421 252T484 208T554 189Q616 189 655 236T694 338Q694 350 698 358T708 367Q722 367 722 334Q722 260 677 197T562 134H554Q517 134 481 152T414 196T355 248T292 293T223 311Q179 311 145 286Q109 257 96 218T80 156T69 133Q55 133 55 166Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(2243.8,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width: 3;"/></g><g data-mml-node="mo" transform="translate(2746.8,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(3135.8,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(4046.1,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" style="stroke-width: 3;"/></g><g data-mml-node="msub" transform="translate(4324.1,0)"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width: 3;"/></g><g data-mml-node="mi" transform="translate(609,-150) scale(0.707)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width: 3;"/></g></g><g data-mml-node="mo" transform="translate(5238.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width: 3;"/></g></g></g></svg><mjx-assistive-mml unselectable="on" display="inline" style="top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px); -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; position: absolute; padding: 1px 0px 0px 0px; border: 0px; display: block; width: auto; overflow: hidden;"><math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mi>x</mi><mi>t</mi></msub><mo>∼</mo><mi>p</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>t</mi></msub><mo data-mjx-texclass="ORD" stretchy="false">|</mo><msub><mi>h</mi><mi>t</mi></msub><mo stretchy="false">)</mo></math></mjx-assistive-mml></mjx-container></li></ul></li><li>时序模型核心思想：当前数据与过去相关</li><li>自回归模型，通过自身历史数据预测未来</li></ul><h2 id="2-步骤"><a class="header-anchor" href="#2-步骤"> </a>2. 步骤</h2><ol><li><p><strong>加载文本</strong><br>将原始文本作为字符串（String）读入内存。</p></li><li><p><strong>分词（Tokenisation）</strong></p><ul><li>使用 <code>tokenise</code> 函数把 <strong>文本列表</strong> 作为输入，</li><li><strong>列表</strong> 中每个元素是一个 <strong>文本序列</strong>，</li><li>每个 <strong>文本序列</strong> 被切分为 <strong>词元</strong>（token）列表。</li><li><strong>Token</strong> 是文本的基本单位，可能是单词、子词或字符。</li><li>最终返回一个由 <strong>Token</strong> 列表组成的列表。（a list of token lists）</li></ul></li><li><p><strong>构建词表/字典（Vocabulary）</strong></p><ul><li>词元是字符串类型，为了后续建模，需要把每个 token 映射成唯一的数字索引。</li><li>构建词表的主要步骤：<ol><li><strong>收集语料（Corpus）</strong>：合并所有训练文本，统计唯一 token，并分配数字索引。</li><li><strong>排序</strong>：按 token 出现频率从高到低排序。</li><li><strong>过滤低频词</strong>：设置最低频率阈值，低于此阈值的 token 会被移除，减少复杂性。</li><li><strong>添加特殊词元</strong><ul><li><code>&lt;unk&gt;</code>：未登录词（未知词汇）</li><li><code>&lt;pad&gt;</code>：填充</li><li><code>&lt;bos&gt;</code>：序列开始</li><li><code>&lt;eos&gt;</code>：序列结束</li></ul></li><li><strong>建立2个核心映射</strong><ul><li><code>token_to_idx</code>: token → 索引</li><li><code>idx_to_token</code>: 索引 → token</li></ul></li></ol></li></ul></li><li><p><strong>数值化文本</strong><br>使用词表，将每个文本序列转换为索引序列，变为可直接输入模型的数字数据。</p></li></ol><h2 id="3-总结"><a class="header-anchor" href="#3-总结"> </a>3. 总结</h2><ul><li>序列模型通过条件概率分解，建模时序数据中各元素间的依赖关系。</li><li>文本预处理的核心流程包括：<strong>加载文本、分词、构建词表、数值化</strong>。</li><li>词表将文本单位（token）映射为数字索引，便于模型处理。</li></ul><h2 id="参考资料"><a class="header-anchor" href="#参考资料"> </a>参考资料</h2><ul><li><a href="https://zh.d2l.ai/chapter_recurrent-neural-networks/sequence.html">动手学深度学习（李沐）：序列模型</a></li><li><a href="https://zh.d2l.ai/chapter_recurrent-neural-networks/text-preprocessing.html">动手学深度学习（李沐）：文本处理</a></li><li><a href="https://www.bilibili.com/video/BV1L44y1m768/">Bilibili 视频讲解：序列模型</a></li><li><a href="https://www.bilibili.com/video/BV1Fo4y1Q79L/">Bilibili 视频讲解：文本处理</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Deep Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DL</tag>
      
      <tag>RNN</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>李沐《手动深度学习》环境配置</title>
    <link href="/2025/04/16/5-%E6%9D%8E%E6%B2%90-%E6%89%8B%E5%8A%A8DL%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98/"/>
    <url>/2025/04/16/5-%E6%9D%8E%E6%B2%90-%E6%89%8B%E5%8A%A8DL%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>包括安装步骤、踩坑提示、适配d2l版本说明，适合写给想要在本地用 Jupyter Notebook 或者 PyCharm 学习这本书的朋友。</p><h2 id="使用的环境配置（推荐）"><a class="header-anchor" href="#使用的环境配置（推荐）"> </a>使用的环境配置（推荐）</h2><table><thead><tr><th>组件</th><th>版本</th></tr></thead><tbody><tr><td>Python</td><td>3.8</td></tr><tr><td>d2l</td><td>0.17.6</td></tr><tr><td>torch</td><td>1.13+</td></tr><tr><td>pandas</td><td>&gt;=1.2.4</td></tr><tr><td>jupyter notebook</td><td>看情况安装</td></tr></tbody></table><p>版本过高，会导致一系列效果无法呈现的问题。</p><h2 id="一、创建-Conda-虚拟环境"><a class="header-anchor" href="#一、创建-Conda-虚拟环境"> </a>一、创建 Conda 虚拟环境</h2><p>推荐使用 Conda 来管理环境，避免依赖冲突。首先创建一个 Python 3.8 的新环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n d2l-py38 python=3.8<br>conda activate d2l-py38<br></code></pre></td></tr></table></figure><h2 id="二、安装-d2l-与依赖"><a class="header-anchor" href="#二、安装-d2l-与依赖"> </a>二、安装 d2l 与依赖</h2><p>我们使用的是 <code>d2l==0.17.6</code> 版本，这是与《动手学深度学习（PyTorch）》最兼容的版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install -c conda-forge d2l=0.17.6<br></code></pre></td></tr></table></figure><p>安装其他依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install torch torchvision matplotlib pandas jupyter<br></code></pre></td></tr></table></figure><h2 id="三、测试示例代码是否正常运行"><a class="header-anchor" href="#三、测试示例代码是否正常运行"> </a>三、测试示例代码是否正常运行</h2><p>打开 Jupyter：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jupyter notebook<br></code></pre></td></tr></table></figure><p>我们使用的是 PyCharm 中集成的 notebook。</p><h2 id="四、常见错误与解决方案"><a class="header-anchor" href="#四、常见错误与解决方案"> </a>四、常见错误与解决方案</h2><h3 id="🐛-1-AttributeError-module-d2l-torch-has-no-attribute-train-ch3"><a class="header-anchor" href="#🐛-1-AttributeError-module-d2l-torch-has-no-attribute-train-ch3"> </a>🐛 1. <code>AttributeError: module 'd2l.torch' has no attribute 'train_ch3'</code></h3><p>说明你装的是 <code>d2l</code> 新版本（比如 <code>0.17.7</code> 以后），该版本移除了一些旧函数。解决方法：</p><p>✅ <strong>回退到 0.17.6</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install d2l==0.17.6<br></code></pre></td></tr></table></figure><h3 id="🐛-2-Conda-报错-pandas-1-2-4-requires-python-3-10"><a class="header-anchor" href="#🐛-2-Conda-报错-pandas-1-2-4-requires-python-3-10"> </a>🐛 2. Conda 报错 <code>pandas 1.2.4 requires python&lt;3.10</code></h3><p>这是因为 <code>d2l==0.17.6</code> 依赖老版本 pandas（如 1.2.4），而 pandas 不兼容 Python 3.10。解决方法：</p><p>✅ 使用 Python 3.8 或 3.9 创建环境。</p><h2 id="五、删除不需要的-Conda-环境（可选）"><a class="header-anchor" href="#五、删除不需要的-Conda-环境（可选）"> </a>五、删除不需要的 Conda 环境（可选）</h2><p>查看所有环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda <span class="hljs-built_in">env</span> list<br></code></pre></td></tr></table></figure><p>删除指定环境（比如 d2l-py310）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda deactivate<br>conda <span class="hljs-built_in">env</span> remove -n d2l-py310<br></code></pre></td></tr></table></figure><h2 id="参考资料"><a class="header-anchor" href="#参考资料"> </a>参考资料</h2><ul><li><a href="https://www.bilibili.com/video/BV18p4y1h7Dr/">Bilibili 视频讲解：安装</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>Deep Learning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DL</tag>
      
      <tag>Error</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>macOS 环境变量</title>
    <link href="/2025/03/01/3-macOS%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/"/>
    <url>/2025/03/01/3-macOS%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>在 macOS 系统中，可以通过以下方式来配置环境变量，查看环境变量。</p><hr><h2 id="1-临时设置（仅对当前终端会话有效）"><a class="header-anchor" href="#1-临时设置（仅对当前终端会话有效）"> </a>1. 临时设置（仅对当前终端会话有效）</h2><p>在终端中直接使用 <code>export</code> 命令可以设置环境变量，这个变量只在当前会话内有效。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> MY_VAR=<span class="hljs-string">&quot;my_value&quot;</span><br></code></pre></td></tr></table></figure><p>之后，你可以通过 <code>echo $MY_VAR</code> 来查看变量值。如果关闭终端或启动新的终端窗口，这个设置就会失效。</p><hr><h2 id="2-永久设置（对所有终端会话有效）"><a class="header-anchor" href="#2-永久设置（对所有终端会话有效）"> </a>2. 永久设置（对所有终端会话有效）</h2><p>要永久设置环境变量，需要将 <code>export</code> 命令写入到 shell 的配置文件中。macOS 默认使用 zsh（macOS Catalina 及以上版本）：</p><ul><li><p><strong>如果你使用 zsh</strong>，可以编辑文件 <code>~/.zshrc</code> 或 <code>~/.zprofile</code>：</p><ol><li>打开终端，输入命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.zshrc<br></code></pre></td></tr></table></figure></li><li>在文件末尾添加你需要的环境变量配置，例如：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> MY_VAR=<span class="hljs-string">&quot;my_value&quot;</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/your/custom/path&quot;</span><br></code></pre></td></tr></table></figure></li><li>保存并退出（在 nano 中按 <code>Control+O</code> 保存，然后 <code>Control+X</code> 退出）。</li><li>使配置立即生效：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure></li></ol></li><li><p><strong>如果你使用 bash</strong>（较旧版本或自行切换到 bash），则修改 <code>~/.bash_profile</code> 或 <code>~/.bashrc</code>：</p><ol><li>打开终端，输入命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.bash_profile<br></code></pre></td></tr></table></figure></li><li>添加环境变量配置：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> MY_VAR=<span class="hljs-string">&quot;my_value&quot;</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;<span class="hljs-variable">$PATH</span>:/your/custom/path&quot;</span><br></code></pre></td></tr></table></figure></li><li>保存并退出，然后运行：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bash_profile<br></code></pre></td></tr></table></figure></li></ol></li></ul><h2 id="3-查看环境变量"><a class="header-anchor" href="#3-查看环境变量"> </a>3. 查看环境变量</h2><ol><li><p><strong>使用 printenv 命令</strong><br>打开终端，输入以下命令查看所有环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">printenv</span><br></code></pre></td></tr></table></figure><p>这条命令会列出当前会话中的所有环境变量及其值。</p></li><li><p><strong>使用 env 命令</strong><br>类似于 printenv，env 命令也可以显示环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">env</span><br></code></pre></td></tr></table></figure></li><li><p><strong>查看特定环境变量</strong><br>如果只想查看某个特定的环境变量，例如 PATH，可以这样输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure></li><li><p><strong>使用 set 命令</strong><br>输入以下命令也可以显示当前的所有环境变量和 shell 函数，但输出可能会更长：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>System</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Prompt Engineering</title>
    <link href="/2025/02/27/2-prompt-engineering/"/>
    <url>/2025/02/27/2-prompt-engineering/</url>
    
    <content type="html"><![CDATA[<h2 id="1-Prompt"><a class="header-anchor" href="#1-Prompt"> </a>1. Prompt</h2><h3 id="1-1-Prompt-是什么？"><a class="header-anchor" href="#1-1-Prompt-是什么？"> </a>1.1 Prompt 是什么？</h3><p>Prompt 是一种人为构造的输入序列，用于引导 GPT 模型根据先前输入的内容生成相关的输出。简单来说，就是你向模型提供的 “提示词”。<br>在 ChatGpt 中，我们可以通过设计不同的 prompt，让模型生成与之相关的文本。例如，假设我们想让 ChatGpt 担任英语翻译。我们可以给模型提供以下 prompt：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ruby">我希望你能担任英语翻译、拼写校对和修辞改进的角色。<br>我会用任何语言和你交流，你会识别语言，将其翻译并用更为优美和精炼的英语回答我。<br>请将我简单的词汇和句子替换成更为优美和高雅的表达方式，确保意思不变，但使其更具文学性。<br>请仅回答更正和改进的部分，不要写解释。我的第一句话是“how are you <span class="hljs-string">?，</span>请翻译它。<br></code></pre></td></tr></table></figure><p>这样，我们就可以期待模型生成一段文本了。</p><h3 id="1-2-Prompt-如何生成？"><a class="header-anchor" href="#1-2-Prompt-如何生成？"> </a>1.2 Prompt 如何生成？</h3><p>我们应该怎么去写一个好的 prompt 呢？Github 上有位大佬 Matt Nigh 基于ChatGPT3 Prompt Engineering的分享, <a href="https://github.com/mattnigh/ChatGPT3-Free-Prompt-List">https://github.com/mattnigh/ChatGPT3-Free-Prompt-List</a></p><h2 id="2-Prompt-Engineering-实践"><a class="header-anchor" href="#2-Prompt-Engineering-实践"> </a>2. Prompt Engineering 实践</h2><h2 id="3-指示技术"><a class="header-anchor" href="#3-指示技术"> </a>3. 指示技术</h2><h2 id="4-结构化输出"><a class="header-anchor" href="#4-结构化输出"> </a>4. 结构化输出</h2><h2 id="5-Prompt-应用"><a class="header-anchor" href="#5-Prompt-应用"> </a>5. Prompt 应用</h2><h2 id="6-GPT-4o-图像提示工程技术"><a class="header-anchor" href="#6-GPT-4o-图像提示工程技术"> </a>6. GPT-4o 图像提示工程技术</h2>]]></content>
    
    
    <categories>
      
      <category>LLM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
      <tag>Prompt_engineering</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenAI 常用参数</title>
    <link href="/2025/02/21/2-OpenAI%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/"/>
    <url>/2025/02/21/2-OpenAI%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<ul><li><code>max_tokens</code>：控制生成内容的长度。</li><li><code>temperature</code>：控制生成内容的随机性和创造性。</li><li><code>n</code>：生成多个回答供选择。</li><li><code>top_p</code>：通过概率控制生成内容的多样性。</li><li><code>presence_penalty</code>：鼓励生成新内容，避免重复。</li><li><code>frequency_penalty</code>：减少词语重复，提高多样性。</li><li><code>stream</code>：控制生成的文本是否以流式方式逐步发送。</li></ul><h2 id="1-temperature（温度参数）"><a class="header-anchor" href="#1-temperature（温度参数）"> </a>1. <strong><code>temperature</code>（温度参数）</strong></h2><ul><li><strong>作用</strong>：控制输出概率分布的平滑程度，即生成文本的随机性。值范围[0,1]，值越大，生成的文本越随机。</li></ul><h3 id="例子"><a class="header-anchor" href="#例子"> </a>例子</h3><p>输入：你要写一首关于秋天的诗。</p><ul><li>temperature = 0.2（低温度，收敛回答）：<ul><li>回应：“秋天的树叶飘舞在风中，金黄色的田野映入眼帘。”</li></ul></li><li>temperature = 0.8（高温度，更随机）：<ul><li>回应：“秋天的旋律在微风中回荡，金黄的梦幻洒满田野。”</li></ul></li></ul><h2 id="2-top-p（控制采样）"><a class="header-anchor" href="#2-top-p（控制采样）"> </a>2. <strong><code>top_p</code>（控制采样）</strong></h2><ul><li><strong>定义</strong>：确定生成文本时考虑的 token 累计概率。值为0到1之间，常用来替代<code>temperature</code>设置。<code>top_p</code>为0.9时，模型仅在最有可能的 token 集合（累计概率达到0.9）中进行选择。</li><li><strong>作用</strong>：动态限制候选词的选择范围，避免模型选择过低概率的词汇，同时保留一定的多样性。控制生成内容的多样性，top_p越小，生成内容越确定。</li></ul><h3 id="例子："><a class="header-anchor" href="#例子："> </a>例子：</h3><ul><li>输入：描述一个梦想中的度假胜地。</li><li>top_p = 0.9（较有创意）：<ul><li>回应：“岛屿被蓝色的海水环绕，白色沙滩上点缀着茅草屋，椰子树随风摇曳。”</li></ul></li><li>top_p = 0.5（较确定）：<ul><li>回应：“度假胜地是一座热带岛屿，有着美丽的海滩和清澈的海水，适合享受安静的时光。”</li></ul></li></ul><h2 id="主要区别"><a class="header-anchor" href="#主要区别"> </a><strong>主要区别</strong></h2><table><thead><tr><th>参数</th><th>作用</th><th>影响</th><th>适用场景</th></tr></thead><tbody><tr><td><code>temperature</code></td><td>调整生成的<strong>随机性</strong></td><td>高温度生成更多样但可能不准确，低温度生成更稳定但可能重复</td><td>需要控制文本创造性或稳定性时</td></tr><tr><td><code>top_p</code></td><td>控制<strong>采样范围</strong></td><td>仅从概率较高的词中采样，动态调整候选池</td><td>需要平衡多样性和连贯性时</td></tr></tbody></table><h2 id="3-n（生成数量）"><a class="header-anchor" href="#3-n（生成数量）"> </a>3. <strong><code>n</code>（生成数量）</strong></h2><ul><li><strong>作用</strong>：指定每次请求生成多少个独立的文本候选。</li><li><strong>机制</strong>：<ul><li><code>n = 1</code>（默认）：返回一个生成结果。</li><li><code>n &gt; 1</code>：返回多个不同的生成结果（每个结果都是独立生成的）。</li></ul></li><li><strong>应用场景</strong>：<ul><li>通常用于需要多样性选择的场景，比如生成多个候选答案来挑选最佳的回答。</li></ul></li></ul><h2 id="4-max-tokens（最大生成长度）"><a class="header-anchor" href="#4-max-tokens（最大生成长度）"> </a>4. <strong><code>max_tokens</code>（最大生成长度）</strong></h2><ul><li><strong>作用</strong>：限制生成文本的最大长度，以 tokens 为单位。</li><li><strong>机制</strong>：<ul><li><code>max_tokens</code> 设置一个上限，超过这个值时，模型会停止输出。</li><li>如果 <code>max_tokens</code> 过小，可能导致句子被截断，影响可读性。</li><li><code>max_tokens</code> 过大可能会导致不必要的冗长输出，并增加计算成本。</li></ul></li><li><strong>应用场景</strong>：<ul><li>限制输出长度，适用于对话系统、摘要生成等需要短文本的任务。</li><li>避免无限制的文本生成，提高效率。</li><li>应用的时候<strong>设置10个 token</strong> ， 可能左右会<strong>使用10个左右的 token</strong>， 要根据具体分词策略来计算。比如：<code>秋风起</code>，<code>秋风</code>可以作为一个 token ， 也可能是<code>风起</code>作为一个 token。</li></ul></li></ul><h2 id="5-presence-penalty（出现惩罚-阻止调整）"><a class="header-anchor" href="#5-presence-penalty（出现惩罚-阻止调整）"> </a>5. <strong><code>presence_penalty</code>（出现惩罚/阻止调整）</strong></h2><ul><li><strong>作用</strong>：影响模型生成新主题内容(新词)的倾向，减少重复内容，提高生成的多样性。值范围通常在-2.0到2.0之间。较高的值鼓励模型生成前面未出现过的新内容。</li><li><strong>应用场景</strong>：<ul><li>适用于对话、创意写作，避免模型不断重复相同的短语。</li><li>适用于故事生成，让模型更愿意引入新概念。</li></ul></li><li>例子：<ul><li>输入：重新生成描述夏天的句子。</li><li>presence_penalty = 1.0（较高惩罚）：<ul><li>回应：“夏天阳光充足，清凉的冰淇淋是人们的最爱。”</li></ul></li><li>presence_penalty = 0.0（无惩罚）：<ul><li>回应：“夏天阳光灿烂，人们喜欢躺在沙滩上享受日光浴。”</li></ul></li></ul></li></ul><h2 id="6-frequency-penalty（重复词惩罚因子）"><a class="header-anchor" href="#6-frequency-penalty（重复词惩罚因子）"> </a>6. <strong><code>frequency_penalty</code>（重复词惩罚因子）</strong></h2><ul><li><p><strong>作用</strong>：减少重复词的出现，使文本更加多样化。值范围通常[-2.0,2.0]。高值会减少模型重复使用某些词或短语的频率。</p></li><li><p><strong>用法</strong>：用来减少重复词语，提高输出的流畅度和多样性。</p></li></ul><h3 id="例子：-v2"><a class="header-anchor" href="#例子：-v2"> </a>例子：</h3><ul><li>输入：描述你的一天。</li><li>frequency_penalty = 1.5（较高惩罚）：<ul><li>回应：“我的一天开始于晨跑，然后享用早餐并开始工作。午餐后，进行一些锻炼和阅读。”</li></ul></li><li>frequency_penalty = 0.0（无惩罚）：<ul><li>回应：“我的一天从晨跑开始，之后吃早餐准备工作。午饭后，我会去健身房锻炼，结束后读书放松。”</li></ul></li></ul><h2 id="5-stream（流式输出）"><a class="header-anchor" href="#5-stream（流式输出）"> </a>5. <strong><code>stream</code>（流式输出）</strong></h2><ul><li><strong>作用</strong>：控制模型是否<strong>逐步返回</strong>生成的文本，而不是等待完整生成后再返回。</li><li><strong>机制</strong>：<ul><li><code>stream = False</code>（默认）：模型等待完整生成后再一次性返回所有结果。</li><li><code>stream = True</code>：模型逐步返回 token，使用户可以实时看到输出。</li></ul></li><li><strong>应用场景</strong>：<ul><li>适用于<strong>对话机器人、实时应用</strong>（如 AI 助手、代码补全）。</li><li>增强用户体验，使生成过程更加流畅（类似于 ChatGPT 的流式响应）。</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs routeros"> response = openai.ChatCompletion.create(<br>   <span class="hljs-attribute">model</span>=<span class="hljs-string">&quot;gpt-4&quot;</span>,<br>   messages=[&#123;<span class="hljs-string">&quot;role&quot;</span>: <span class="hljs-string">&quot;user&quot;</span>, <span class="hljs-string">&quot;content&quot;</span>: <span class="hljs-string">&quot;解释一下量子力学&quot;</span>&#125;],<br>   <span class="hljs-attribute">stream</span>=<span class="hljs-literal">True</span><br>)<br> <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> response:<br>   <span class="hljs-built_in">print</span>(chunk[<span class="hljs-string">&#x27;choices&#x27;</span>][0][<span class="hljs-string">&#x27;delta&#x27;</span>][<span class="hljs-string">&#x27;content&#x27;</span>], <span class="hljs-attribute">end</span>=<span class="hljs-string">&#x27;&#x27;</span>)<br></code></pre></td></tr></table></figure></li></ul><h2 id="参数总结对比"><a class="header-anchor" href="#参数总结对比"> </a>参数总结对比</h2><table><thead><tr><th>参数</th><th>作用</th><th>典型取值</th><th>影响</th></tr></thead><tbody><tr><td><code>n</code></td><td>生成多少个不同的输出</td><td>1-10（通常 1）</td><td>控制输出数量，提高选择性</td></tr><tr><td><code>max_tokens</code></td><td>限制最大输出长度</td><td>50-4000</td><td>避免超长生成或截断句子</td></tr><tr><td><code>presence_penalty</code></td><td>促使生成新词，减少重复</td><td>-2.0 到 2.0</td><td>促进创造性，减少重复内容</td></tr><tr><td><code>frequency_penalty</code></td><td>降低重复词出现的频率</td><td>-2.0 到 2.0</td><td>减少冗余，提高文本质量</td></tr><tr><td><code>stream</code></td><td>控制是否逐步返回生成文本</td><td>True/False</td><td>适用于实时交互，提高用户体验</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>LLM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
      <tag>parameters</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章草稿-不显示</title>
    <link href="/2025/02/20/1-%E6%96%87%E7%AB%A0%E8%8D%89%E7%A8%BF-%E4%B8%8D%E6%98%BE%E7%A4%BA/"/>
    <url>/2025/02/20/1-%E6%96%87%E7%AB%A0%E8%8D%89%E7%A8%BF-%E4%B8%8D%E6%98%BE%E7%A4%BA/</url>
    
    <content type="html"><![CDATA[<p>博客的半成品保存但是不想发布，可以使用 <code>draft</code> 来保存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new draft <span class="hljs-string">&quot;foobar&quot;</span><br></code></pre></td></tr></table></figure><p>文件会被保存到 <code>source/_drafts</code> 的文件夹中。如果想发表，可以直接移动到 <code>source/_posts</code> 中，或 执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo publish _drafts &lt;filename&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章加密</title>
    <link href="/2025/02/19/1-%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/"/>
    <url>/2025/02/19/1-%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="481ded08d39504bee41190868bb3037e97abf4e465c5ddf94b175f1ada63b3bb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码：test</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>HTML</tag>
      
      <tag>js</tag>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MacOS-M2 如何进入恢复模式管理SIP</title>
    <link href="/2025/02/17/3-macOS-M2%E5%A6%82%E4%BD%95%E5%BC%80%E5%85%B3SIP/"/>
    <url>/2025/02/17/3-macOS-M2%E5%A6%82%E4%BD%95%E5%BC%80%E5%85%B3SIP/</url>
    
    <content type="html"><![CDATA[<p>在 macOS M2 设备上，有时我们需要进入 <strong>恢复模式</strong>（Recovery Mode）来执行一些系统级的操作，比如关闭或开启 SIP（System Integrity Protection）。本文将详细介绍如何进入恢复模式，并管理 SIP 设置。</p><h2 id="进入恢复模式"><a class="header-anchor" href="#进入恢复模式"> </a>进入恢复模式</h2><ol><li><strong>关闭 Mac</strong>：如果 Mac 处于开机状态，先正常关机。</li><li><strong>进入恢复模式</strong>：按住 <strong>电源键</strong>，直到看到 Apple 标志和“启动选项”的窗口。</li><li><strong>选择恢复模式</strong>：在启动选项中，点击 <strong>选项（Options）</strong>，然后选择 <strong>继续（Continue）</strong>。</li><li><strong>打开终端</strong>：<ul><li>在恢复模式界面，点击 <strong>左上角菜单</strong>。</li><li>选择 <strong>Utilities（实用工具）</strong> &gt; <strong>Terminal（终端）</strong>。</li></ul></li></ol><h2 id="关闭-SIP"><a class="header-anchor" href="#关闭-SIP"> </a>关闭 SIP</h2><ol><li>在终端中输入以下命令：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">csrutil <span class="hljs-built_in">disable</span><br></code></pre></td></tr></table></figure></li><li>按下 <strong>回车（Enter）</strong>。</li><li>根据提示输入 <strong>管理员密码</strong>（不会显示输入内容，直接输入后按回车）。</li><li>关闭 <strong>终端</strong>。</li><li>点击 <strong>左上角苹果图标</strong>，选择 <strong>Restart（重启）</strong>，等待 Mac 重新启动。</li><li>现在，SIP 已被关闭，你可以运行需要操作的文件。</li></ol><h2 id="重新开启-SIP"><a class="header-anchor" href="#重新开启-SIP"> </a>重新开启 SIP</h2><p>完成所需操作后，建议重新启用 SIP 以保护系统安全。步骤如下：</p><ol><li><strong>重复进入恢复模式</strong>（参考上方步骤）。</li><li><strong>打开终端</strong>，输入以下命令：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">csrutil <span class="hljs-built_in">enable</span><br></code></pre></td></tr></table></figure></li><li>按下 <strong>回车（Enter）</strong>。</li><li>关闭 <strong>终端</strong>。</li><li>点击 <strong>左上角苹果图标</strong>，选择 <strong>Restart（重启）</strong>，等待 Mac 重新启动。</li><li>现在，SIP 已成功启用，系统受保护状态恢复。</li></ol><h2 id="结语"><a class="header-anchor" href="#结语"> </a>结语</h2><p>SIP 是 macOS 的一项重要安全机制，通常情况下不建议关闭。只有在需要进行特定修改时才临时关闭，并在操作完成后立即重新启用，以确保系统安全稳定。</p>]]></content>
    
    
    <categories>
      
      <category>System</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据科学 - 客户流失预测：基于随机森林的分析与优化</title>
    <link href="/2025/02/12/4-1-%E5%AE%A2%E6%88%B7%E6%B5%81%E5%A4%B1%E9%97%AE%E9%A2%98/"/>
    <url>/2025/02/12/4-1-%E5%AE%A2%E6%88%B7%E6%B5%81%E5%A4%B1%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h2 id="项目概述"><a class="header-anchor" href="#项目概述"> </a><strong>项目概述</strong></h2><p>本项目旨在帮助PowerCo（一个大型公用事业公司，提供电力和天然气服务）解决客户流失的问题。PowerCo面临的主要挑战是中小型企业（SME）客户的流失，尤其是在当前充满竞争的能源市场中。为了帮助PowerCo更好地理解客户流失的原因，我们的目标是识别导致客户流失的关键因素，并提出改进客户留存率的具体建议。</p><p>在这个项目中，我们将通过数据科学的方法，结合探索性数据分析（EDA）、特征工程和机器学习模型，帮助PowerCo识别流失的驱动因素。最终，我们将构建一个客户流失预测模型，并提出基于数据驱动的建议，帮助PowerCo提高客户留存率。</p><h2 id="Task-1：业务理解与假设框架"><a class="header-anchor" href="#Task-1：业务理解与假设框架"> </a><strong>Task 1：业务理解与假设框架</strong></h2><p>在项目的初期阶段，我们的任务是将PowerCo面临的业务问题转化为数据科学问题，并为后续的分析设立清晰的假设框架。</p><h3 id="业务问题定义"><a class="header-anchor" href="#业务问题定义"> </a><strong>业务问题定义</strong></h3><p>PowerCo正在面临越来越多的客户流失问题，尤其是在中小型企业（SME）领域。为了找出客户流失的根本原因，我们需要回答以下几个关键问题：</p><ul><li><strong>流失的原因是什么？</strong> 客户流失可能受到多个因素的影响，如产品定价、产品差异化、客户服务质量等。</li><li><strong>有哪些因素会导致客户选择更换能源供应商？</strong> 是否有某些特定因素（如价格敏感度）对客户流失有更大的影响？</li></ul><h3 id="假设框架"><a class="header-anchor" href="#假设框架"> </a><strong>假设框架</strong></h3><p>在初步了解了业务问题后，我们根据行业知识和前期调研，提出了以下假设，作为后续分析的方向：</p><ol><li><strong>产品差异化不足</strong>：如果PowerCo的产品与其他供应商差异不大，客户可能会更容易转向价格更具竞争力的其他供应商。</li><li><strong>客户服务差</strong>：差的客户服务可能会导致客户的不满和流失。提高客户服务质量或许是减少流失的有效措施。</li><li><strong>定价问题</strong>：客户流失可能与价格敏感度相关，即如果客户觉得其他供应商提供更具吸引力的价格，他们可能会选择换供应商。</li></ol><p>基于这些假设，我们将通过数据分析来验证这些因素是否确实是流失的关键驱动因素。</p><h3 id="数据科学任务"><a class="header-anchor" href="#数据科学任务"> </a><strong>数据科学任务</strong></h3><p>将业务问题转化为数据科学问题，我们的主要任务包括：</p><ul><li><strong>收集和分析数据</strong>：我们将需要从PowerCo收集历史客户数据、定价数据和客户流失数据。</li><li><strong>建立假设并进行验证</strong>：通过数据分析验证上述假设，评估哪些因素对客户流失的影响最大。</li><li><strong>模型设计</strong>：基于数据分析结果，我们将构建预测模型，用于预测哪些客户更可能流失。</li></ul><h2 id="Task-2：探索性数据分析（EDA）"><a class="header-anchor" href="#Task-2：探索性数据分析（EDA）"> </a><strong>Task 2：探索性数据分析（EDA）</strong></h2><h3 id="任务目标"><a class="header-anchor" href="#任务目标"> </a><strong>任务目标</strong></h3><p>我们的目标是通过探索性数据分析（EDA）深入了解PowerCo的客户数据和定价数据，并识别可能影响客户流失的关键因素。通过对数据的初步分析，我们将能够发现潜在的趋势、模式以及异常值，为后续的建模和特征工程工作打下基础。</p><h3 id="数据集概述"><a class="header-anchor" href="#数据集概述"> </a><strong>数据集概述</strong></h3><p>我们使用了两个主要的数据集：<strong>client_data.csv</strong> 和 <strong>price_data.csv</strong>。这些数据集包含了PowerCo的客户信息、消费行为以及电力和功率价格等信息。</p><h4 id="client-data-csv"><a class="header-anchor" href="#client-data-csv"> </a><strong>client_data.csv</strong></h4><p>这个数据集包含了PowerCo的客户信息，主要字段如下：</p><ul><li><strong>id</strong>: 客户公司唯一标识符</li><li><strong>activity_new</strong>: 客户公司活动类别</li><li><strong>channel_sales</strong>: 销售渠道的代码</li><li><strong>cons_12m</strong>: 过去12个月的电力消费量</li><li><strong>cons_gas_12m</strong>: 过去12个月的天然气消费量</li><li><strong>cons_last_month</strong>: 上个月的电力消费量</li><li><strong>date_activ</strong>: 合同激活日期</li><li><strong>date_end</strong>: 合同结束日期</li><li><strong>date_modif_prod</strong>: 上次产品修改日期</li><li><strong>date_renewal</strong>: 下一次合同续约日期</li><li><strong>forecast_cons_12m</strong>: 预测的未来12个月电力消费量</li><li><strong>forecast_cons_year</strong>: 预测的未来1年电力消费量</li><li><strong>forecast_discount_energy</strong>: 当前电力折扣的预测值</li><li><strong>forecast_meter_rent_12m</strong>: 未来12个月的电表租赁费用预测</li><li><strong>forecast_price_energy_off_peak</strong>: 预测的1号时段（非高峰时段）电价</li><li><strong>forecast_price_energy_peak</strong>: 预测的2号时段（高峰时段）电价</li><li><strong>forecast_price_pow_off_peak</strong>: 预测的1号时段（非高峰时段）功率价格</li><li><strong>has_gas</strong>: 是否为天然气用户</li><li><strong>imp_cons</strong>: 当前已支付的电力消费量</li><li><strong>margin_gross_pow_ele</strong>: 电力订阅的毛利</li><li><strong>margin_net_pow_ele</strong>: 电力订阅的净利</li><li><strong>nb_prod_act</strong>: 活跃产品和服务的数量</li><li><strong>net_margin</strong>: 总净利润</li><li><strong>num_years_antig</strong>: 客户的历史年数（即客户的老化度）</li><li><strong>origin_up</strong>: 客户首次订阅的电力营销活动的代码</li><li><strong>pow_max</strong>: 订阅的最大功率</li><li><strong>churn</strong>: 客户是否在未来3个月内流失（流失标识）</li></ul><h4 id="price-data-csv"><a class="header-anchor" href="#price-data-csv"> </a><strong>price_data.csv</strong></h4><p>这个数据集包含了每个客户的电力和功率价格数据，涵盖了不同时间段的电价情况。主要字段如下：</p><ul><li><strong>id</strong>: 客户公司唯一标识符</li><li><strong>price_date</strong>: 参考日期</li><li><strong>price_off_peak_var</strong>: 1号时段（非高峰时段）的变动电价</li><li><strong>price_peak_var</strong>: 2号时段（高峰时段）的变动电价</li><li><strong>price_mid_peak_var</strong>: 3号时段（中峰时段）的变动电价</li><li><strong>price_off_peak_fix</strong>: 1号时段（非高峰时段）的固定电价</li><li><strong>price_peak_fix</strong>: 2号时段（高峰时段）的固定电价</li><li><strong>price_mid_peak_fix</strong>: 3号时段（中峰时段）的固定电价</li></ul><p><strong>注意：</strong> 部分字段为哈希处理的文本字符串，这些字段保持了原始数据的隐私性，但它们仍然保留了商业含义，可能具有预测能力。</p><hr><h3 id="数据用途与分析"><a class="header-anchor" href="#数据用途与分析"> </a><strong>数据用途与分析</strong></h3><p>在探索性数据分析（EDA）阶段，我们将重点分析以下几个方面：</p><ol><li><p><strong>客户消费行为：</strong><br>通过分析过去12个月的电力和天然气消费量、预测消费量等数据，我们希望识别哪些消费模式可能与客户流失相关。例如，客户是否有突出的消费模式（如在某些月份消费激增），这些模式可能会影响他们是否选择续约或切换到其他供应商。</p></li><li><p><strong>定价因素：</strong><br>价格是流失的一个潜在驱动因素。我们将分析不同时间段（如高峰时段和非高峰时段）的电力价格如何影响客户流失。特别是，对于价格敏感的客户，价格的波动可能会直接影响他们的流失决定。</p></li><li><p><strong>客户服务与合约信息：</strong><br>客户的合约信息（如合同开始和结束日期、产品修改日期、续约日期等）可能揭示出客户是否有重新评估服务的趋势。如果客户接近合同结束日期或者没有及时续约，他们可能更容易流失。因此，我们将分析这些时间相关特征对客户流失的影响。</p></li><li><p><strong>流失率分析：</strong><br>我们将计算流失率，并检查不同特征（如消费水平、价格敏感度、合同类型等）与流失率之间的关系。这将帮助我们识别出哪些特征在预测客户流失方面更为重要。</p></li><li><p><strong>异常值与数据清洗：</strong><br>在EDA过程中，可能会遇到数据中的异常值或缺失值。我们将通过描述性统计分析（如均值、中位数、标准差）和可视化手段（如箱型图）来识别这些问题，并采取相应的措施进行处理。</p></li></ol><hr><h3 id="探索性数据分析（EDA）"><a class="header-anchor" href="#探索性数据分析（EDA）"> </a><strong>探索性数据分析（EDA）</strong></h3><p>在任务2中，我们使用了探索性数据分析（EDA）来对PowerCo的客户数据和定价数据进行深入分析。以下是我们分析的关键内容和得出的结论。</p><h4 id="1-数据加载和描述性统计"><a class="header-anchor" href="#1-数据加载和描述性统计"> </a><strong>1. 数据加载和描述性统计</strong></h4><p>首先，我们加载了<code>client_data.csv</code>和<code>price_data.csv</code>数据，并进行了基本的描述性统计分析。通过查看数据的结构和每个字段的类型，我们可以了解数据的基本情况。</p><ul><li><strong>客户数据</strong>（<code>client_data.csv</code>）包含26列，其中包括客户的消费数据、合同信息和是否流失的标识。</li><li><strong>价格数据</strong>（<code>price_data.csv</code>）包含7列，主要是关于不同时间段电价的数据。</li></ul><p>我们注意到，日期相关的字段目前并非日期格式，这意味着我们在后续处理中需要将这些字段转换为适当的日期格式。</p><h4 id="2-主要分析内容"><a class="header-anchor" href="#2-主要分析内容"> </a><strong>2. 主要分析内容</strong></h4><p>在EDA中，我们分析了以下几个关键领域：</p><h5 id="客户流失分析"><a class="header-anchor" href="#客户流失分析"> </a><strong>客户流失分析</strong></h5><p>我们计算并可视化了客户流失的比例。结果显示，大约<strong>10%的客户</strong>发生了流失，这为我们后续的分析提供了一个基准。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">churn_percentage = churn_total / churn_total.<span class="hljs-built_in">sum</span>() * <span class="hljs-number">100</span><br></code></pre></td></tr></table></figure><h5 id="销售渠道的流失分布"><a class="header-anchor" href="#销售渠道的流失分布"> </a><strong>销售渠道的流失分布</strong></h5><p>我们分析了不同销售渠道的客户流失情况，结果显示，流失客户分布在多个销售渠道中，尤其是<code>MISSING</code>值对应的渠道流失率为7.6%。这表明，数据清洗过程中<code>MISSING</code>值可能隐含了某些有用的信息，值得在建模时进一步关注。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">channel_churn = (channel.div(channel.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>), axis=<span class="hljs-number">0</span>) * <span class="hljs-number">100</span>).sort_values(by=[<span class="hljs-number">1</span>], ascending=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><h5 id="客户消费分析"><a class="header-anchor" href="#客户消费分析"> </a><strong>客户消费分析</strong></h5><p>我们检查了客户过去12个月的电力和天然气消费数据，并通过直方图展示了它们的分布。消费数据呈<strong>高度正偏态</strong>，显示出在高消费值附近有较长的右尾，这表明存在大量极值或异常值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plot_distribution(consumption, <span class="hljs-string">&#x27;cons_12m&#x27;</span>, axs[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><h5 id="价格敏感度分析"><a class="header-anchor" href="#价格敏感度分析"> </a><strong>价格敏感度分析</strong></h5><p>我们分析了电力的预测价格（高峰和非高峰时段），并观察价格波动对客户流失的潜在影响。该分析有助于确定价格是否为客户流失的主要驱动因素。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">plot_distribution(client_df, <span class="hljs-string">&quot;forecast_price_energy_off_peak&quot;</span>, axs[<span class="hljs-number">4</span>])<br></code></pre></td></tr></table></figure><h5 id="合同类型和客户流失"><a class="header-anchor" href="#合同类型和客户流失"> </a><strong>合同类型和客户流失</strong></h5><p>我们进一步分析了客户是否使用天然气服务对流失的影响。结果表明，天然气客户的流失率较低，这表明多产品套餐可能有助于提高客户的留存率。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">contract_percentage = (contract.div(contract.<span class="hljs-built_in">sum</span>(axis=<span class="hljs-number">1</span>), axis=<span class="hljs-number">0</span>) * <span class="hljs-number">100</span>).sort_values(by=[<span class="hljs-number">1</span>], ascending=<span class="hljs-literal">False</span>)<br></code></pre></td></tr></table></figure><h5 id="毛利和净利分析"><a class="header-anchor" href="#毛利和净利分析"> </a><strong>毛利和净利分析</strong></h5><p>通过分析电力订阅的毛利和净利，我们发现有部分客户的毛利和净利值非常高，这可能表示他们是高价值客户。我们将在特征工程阶段进一步分析这些客户的行为。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">sns.boxplot(margin[<span class="hljs-string">&quot;margin_gross_pow_ele&quot;</span>], ax=axs[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><h3 id="结论"><a class="header-anchor" href="#结论"> </a><strong>结论</strong></h3><p>从EDA中，我们得出了以下结论：</p><ol><li><strong>流失率</strong>：大约10%的客户流失，这为后续的模型提供了基准。</li><li><strong>消费行为</strong>：消费数据偏斜，需要在特征工程中进行调整。</li><li><strong>销售渠道</strong>：不同的销售渠道具有不同的流失率，其中<code>MISSING</code>销售渠道的流失率特别高。</li><li><strong>价格敏感度</strong>：虽然电力价格波动对流失有一定影响，但价格并非最主要的流失因素。</li><li><strong>多产品套餐</strong>：使用天然气的客户流失率较低，表明跨产品套餐可能有助于减少流失。</li></ol><h2 id="Task-3：特征工程"><a class="header-anchor" href="#Task-3：特征工程"> </a>Task 3：特征工程</h2><p>我们进行了特征工程，以增强预测模型的表现，并为后续建模提供了更有用的数据特征。特征工程包括创建新的特征、处理缺失值、数据转换以及特征的编码。以下是详细的过程和结论。</p><h3 id="1-创建价格差异特征"><a class="header-anchor" href="#1-创建价格差异特征"> </a><strong>1. 创建价格差异特征</strong></h3><p>我们首先关注了电价的变化，尤其是12月与前1月之间的电价波动。电价波动可能是客户流失的重要原因。我们通过以下步骤创建了新的特征：</p><ul><li><strong>步骤1</strong>：将电价数据按公司和日期进行分组，计算每个月的平均电价。</li><li><strong>步骤2</strong>：提取1月和12月的数据，并计算这两个月之间的电价差异。<ul><li>计算了<code>offpeak_diff_dec_january_energy</code>（电力价格的电能差异）和<code>offpeak_diff_dec_january_power</code>（电力价格的功率差异）这两个新特征。</li></ul></li></ul><h4 id="结论-v2"><a class="header-anchor" href="#结论-v2"> </a><strong>结论</strong></h4><p>通过分析这些价格差异特征，我们发现价格波动对客户流失可能具有显著影响。客户可能因价格大幅波动而选择离开，因此这些特征为流失预测提供了有价值的信息。</p><h3 id="2-计算时间段内的平均价格变化"><a class="header-anchor" href="#2-计算时间段内的平均价格变化"> </a><strong>2. 计算时间段内的平均价格变化</strong></h3><p>除了价格差异，我们还计算了不同时段之间的平均价格差异。这些时段包括<code>off_peak</code>、<code>peak</code>和<code>mid_peak</code>，每个时段的价格变化对客户的影响不同。我们计算了以下特征：</p><ul><li><code>off_peak_peak_var_mean_diff</code>：计算<code>off_peak</code>和<code>peak</code>时段的平均电价差异。</li><li><code>peak_mid_peak_var_mean_diff</code>：计算<code>peak</code>和<code>mid_peak</code>时段的平均电价差异。</li><li><code>off_peak_mid_peak_var_mean_diff</code>：计算<code>off_peak</code>和<code>mid_peak</code>时段的平均电价差异。</li><li>同样地，对于固定价格时段，我们也计算了类似的特征。</li></ul><h4 id="结论-v3"><a class="header-anchor" href="#结论-v3"> </a><strong>结论</strong></h4><p>通过这些细化的价格变化特征，我们能够捕捉到每个时间段的电价波动，这些波动可能会影响客户的行为。例如，若某一时段的电价上涨较多，客户可能会更倾向于寻找其他电力供应商，因此这些特征可能有助于预测客户流失。</p><h3 id="3-计算最大价格变化"><a class="header-anchor" href="#3-计算最大价格变化"> </a><strong>3. 计算最大价格变化</strong></h3><p>在此基础上，我们还计算了每个月电价的最大变化，进一步捕捉那些可能导致客户流失的异常波动。例如，若某个月的价格突然大幅上涨，客户可能会选择离开。以下是创建的特征：</p><ul><li><code>off_peak_peak_var_max_monthly_diff</code>：计算每个月在<code>off_peak</code>和<code>peak</code>时段的最大价格差异。</li><li><code>peak_mid_peak_var_max_monthly_diff</code>：计算每个月在<code>peak</code>和<code>mid_peak</code>时段的最大价格差异。</li><li><code>off_peak_mid_peak_var_max_monthly_diff</code>：计算每个月在<code>off_peak</code>和<code>mid_peak</code>时段的最大价格差异。</li></ul><h4 id="结论-v4"><a class="header-anchor" href="#结论-v4"> </a><strong>结论</strong></h4><p>这些最大价格变化特征帮助我们捕捉到价格波动的极端情况，这对客户的流失决策有着重要的影响。例如，突然的价格大幅上升可能会让客户更加倾向于跳槽到其他供应商，因此这些特征可能对流失预测有着重要的作用。</p><h3 id="4-创建客户任期特征"><a class="header-anchor" href="#4-创建客户任期特征"> </a><strong>4. 创建客户任期特征</strong></h3><p>客户的任期（即客户与公司建立关系的时间）是另一个重要的特征。我们通过计算客户的任期（以年为单位）来创建了<code>tenure</code>特征。我们发现，客户的任期与流失率之间存在一定的关系：</p><ul><li>客户的任期越短，其流失的可能性越大，尤其是在客户刚开始使用服务时。</li><li>对于任期较长的客户，流失的可能性相对较小。</li></ul><h4 id="结论-v5"><a class="header-anchor" href="#结论-v5"> </a><strong>结论</strong></h4><p>较短的客户任期与较高的流失率相关，因此，<code>tenure</code>特征对于预测流失具有重要价值。</p><h3 id="5-处理日期特征"><a class="header-anchor" href="#5-处理日期特征"> </a><strong>5. 处理日期特征</strong></h3><p>我们对日期特征进行了处理，转换为与特定参考日期的差异（以月为单位）。具体来说，我们创建了以下特征：</p><ul><li><code>months_activ</code>：客户自激活日期以来的月数。</li><li><code>months_to_end</code>：客户合同剩余的月数。</li><li><code>months_modif_prod</code>：自上次产品修改以来的月数。</li><li><code>months_renewal</code>：自上次合同续签以来的月数。</li></ul><p>这些特征有助于捕捉客户与公司之间的关系以及他们对合同变化的反应。</p><h4 id="结论-v6"><a class="header-anchor" href="#结论-v6"> </a><strong>结论</strong></h4><p>这些日期特征可以帮助我们了解客户的生命周期和与公司的关系。例如，接近合同到期的客户可能会开始寻找更优惠的供应商，因此这些特征有助于流失预测。</p><h3 id="6-转换布尔数据"><a class="header-anchor" href="#6-转换布尔数据"> </a><strong>6. 转换布尔数据</strong></h3><p>我们将“has_gas”字段（表示客户是否同时使用电力和天然气服务）从布尔值转换为二元特征。结果显示，使用天然气的客户流失率较低，因此<code>has_gas</code>成为了一个重要的特征。</p><h4 id="结论-v7"><a class="header-anchor" href="#结论-v7"> </a><strong>结论</strong></h4><p>“has_gas”特征揭示了客户是否拥有多个服务，而多服务客户的流失率相对较低，这为流失预测提供了有价值的信息。</p><h3 id="7-类别数据编码（Categorical-Data-Encoding）"><a class="header-anchor" href="#7-类别数据编码（Categorical-Data-Encoding）"> </a><strong>7. 类别数据编码（Categorical Data Encoding）</strong></h3><p>在特征工程中，大多数机器学习算法不能直接处理字符串类型的数据。因此，我们需要将类别数据转换为模型能够理解的数值类型。常见的做法有两种：<strong>标签编码（Label Encoding）</strong> 和 <strong>独热编码（One-Hot Encoding）</strong>。</p><p>在这个任务中，我们主要使用了<strong>独热编码（One-Hot Encoding）</strong>，以下是针对两个重要类别数据的处理：</p><h4 id="7-1-channel-sales（销售渠道）"><a class="header-anchor" href="#7-1-channel-sales（销售渠道）"> </a><strong>7.1. <code>channel_sales</code>（销售渠道）</strong></h4><p>这个特征是一个字符串类型的变量，它表示客户的销售渠道。为了让模型能够处理这个变量，我们将其转换为多个二元（0或1）特征，这样每个独特的销售渠道都对应一个新特征。使用<code>pandas</code>的<code>get_dummies</code>方法进行独热编码后，每个唯一的<code>channel_sales</code>值都会变成一个新的二元特征。如果客户来自某个销售渠道，则为1，否则为0。</p><h4 id="7-2-origin-up（原始营销活动）"><a class="header-anchor" href="#7-2-origin-up（原始营销活动）"> </a><strong>7.2. <code>origin_up</code>（原始营销活动）</strong></h4><p>类似于<code>channel_sales</code>，<code>origin_up</code>也是一个类别变量，表示客户最初参与的营销活动。为了将它转化为数值特征，我们同样使用了<strong>独热编码</strong>。每个唯一的营销活动值将成为一个新的二元特征，标示出该客户是否参与了特定的营销活动。</p><h4 id="结论-v8"><a class="header-anchor" href="#结论-v8"> </a><strong>结论</strong></h4><p>通过 <code>One-Hot Encoding</code>，我们成功地将类别数据转换为数值数据，并避免了由于类别间不合适的顺序关系而可能引入的问题（比如将类别映射为数字时赋予了错误的顺序）。同时，删除频次过低的类别特征，也提高了模型的计算效率。</p><h3 id="8-数值数据的转换（处理偏态分布）（Handling-Skewness-in-Numerical-Data）"><a class="header-anchor" href="#8-数值数据的转换（处理偏态分布）（Handling-Skewness-in-Numerical-Data）"> </a><strong>8. 数值数据的转换（处理偏态分布）（Handling Skewness in Numerical Data）</strong></h3><p>在分析数据时，我们发现一些特征的呈<strong>偏态分布</strong>（Skewed Distribution），尤其是消费类特征，如<code>cons_12m</code>、<code>cons_gas_12m</code>、<code>forecast_cons_12m</code>等。对于偏态分布的特征，很多机器学习模型（特别是线性模型）可能会受到影响，因为它们通常假设数据接近正态分布。为了解决这一问题，常见的处理方法是对这些数据进行<strong>对数转换</strong>（Log Transformation）。</p><h4 id="对数转换的实现"><a class="header-anchor" href="#对数转换的实现"> </a><strong>对数转换的实现</strong></h4><p>我们对以下特征进行了对数转换：</p><ul><li><code>cons_12m</code>（过去12个月的电力消费量）</li><li><code>cons_gas_12m</code>（过去12个月的天然气消费量）</li><li><code>cons_last_month</code>（上个月的电力消费量）</li><li><code>forecast_cons_12m</code>（未来12个月的电力消费预测）</li><li><code>forecast_cons_year</code>（未来一年的电力消费预测）</li><li><code>forecast_meter_rent_12m</code>（未来12个月的计量仪器租赁费）</li></ul><p>对数转换时，我们添加了常数<strong>1</strong>（<code>np.log10(df[&quot;cons_12m&quot;] + 1)</code>），这样做是为了避免对数零值的出现（因为对数0是无定义的）。</p><h4 id="结论-v9"><a class="header-anchor" href="#结论-v9"> </a><strong>结论</strong></h4><p>转换后的数据分布更加均匀，且标准差减小，说明数据变得更加稳定，适合用于机器学习模型。</p><h3 id="9-相关性分析（Correlation-Analysis）"><a class="header-anchor" href="#9-相关性分析（Correlation-Analysis）"> </a><strong>9. 相关性分析（Correlation Analysis）</strong></h3><p>相关性分析的目的是找出特征之间的关系，以避免模型中出现高度相关的特征（即多重共线性）。如果特征之间的相关性过高，可能会导致模型的误差增大，甚至使得模型变得不稳定。因此，在建模之前，我们通常会对数据进行相关性分析，找出和目标变量（在这个项目中为<code>churn</code>）相关的特征，并剔除那些高度相关的特征。</p><h4 id="9-1-如何进行相关性分析？"><a class="header-anchor" href="#9-1-如何进行相关性分析？"> </a><strong>9.1. 如何进行相关性分析？</strong></h4><p>我们通过计算所有特征之间的<strong>皮尔逊相关系数</strong>（Pearson Correlation Coefficient），并绘制相关性热图。相关系数值的范围为[-1, 1]，其中：</p><ul><li><code>1</code> 表示完全正相关，</li><li><code>-1</code> 表示完全负相关，</li><li><code>0</code> 表示没有相关性。</li></ul><h4 id="9-2-特征选择"><a class="header-anchor" href="#9-2-特征选择"> </a><strong>9.2. 特征选择</strong></h4><p>我们通过热图观察了所有特征之间的相关性。热图显示了以下几种情况：</p><ul><li><code>cons_12m</code>（过去12个月的电力消费量）与其他消费相关的特征（如<code>cons_last_month</code>、<code>forecast_cons_12m</code>）之间有很强的相关性，这表明这些特征在反映客户消费行为时有重复的信息。</li><li>一些特征（如<code>num_years_antig</code>和<code>forecast_cons_year</code>）与其他特征之间有较强的相关性，这可能会导致模型的多重共线性问题。</li></ul><p>基于相关性分析，我们删除了两个冗余特征：</p><ul><li><code>num_years_antig</code>：与其他特征（如<code>tenure</code>）高度相关。</li><li><code>forecast_cons_year</code>：与<code>forecast_cons_12m</code>高度相关。</li></ul><h2 id="Task-4：建模"><a class="header-anchor" href="#Task-4：建模"> </a>Task 4：建模</h2><p>在完成了数据预处理和特征工程之后，我们可以开始构建预测模型。根据任务要求，我们将使用 <strong>随机森林分类器</strong> 来预测客户是否会流失。</p><h3 id="数据采样"><a class="header-anchor" href="#数据采样"> </a><strong>数据采样</strong></h3><p>将数据集分成训练集和测试集的目的是模拟现实场景，通过使用测试集进行预测来评估模型的泛化能力。我们通过将数据集分为 75% 的训练数据和 25%。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">train_df = df.copy()<br><br><span class="hljs-comment"># 分离目标变量与特征变量</span><br>y = df[<span class="hljs-string">&#x27;churn&#x27;</span>]<br>X = df.drop(columns=[<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;churn&#x27;</span>])<br><br><span class="hljs-comment"># 拆分数据集</span><br>X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="hljs-number">0.25</span>, random_state=<span class="hljs-number">42</span>)<br></code></pre></td></tr></table></figure><h3 id="模型训练"><a class="header-anchor" href="#模型训练"> </a><strong>模型训练</strong></h3><p>在本任务中，我们使用了 <strong>随机森林分类器</strong>（Random Forest Classifier）。随机森林属于“集成算法”类别，通过多个决策树组合成一个“森林”。通过训练多个决策树，我们能够提高模型的准确性和鲁棒性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">model = RandomForestClassifier(n_estimators=<span class="hljs-number">1000</span>)<br>model.fit(X_train, y_train)<br></code></pre></td></tr></table></figure><p><strong>结论</strong>：</p><ul><li>随机森林模型通过构建 1000 个决策树来进行训练。每棵决策树独立训练，且每棵树都会学习到数据的不同部分和不同的模式。通过这种方式，我们能提高模型的泛化能力，并减少过拟合的风险。</li></ul><h3 id="模型评估"><a class="header-anchor" href="#模型评估"> </a><strong>模型评估</strong></h3><p>在训练完模型后，为了评估模型的效果，我们使用了三个常见的评估指标：</p><ul><li><strong>准确率（Accuracy）</strong>：正确预测的观察值占总观察值的比例。</li><li><strong>精确率（Precision）</strong>：模型将负类错误预测为正类的能力（即避免假阳性）。</li><li><strong>召回率（Recall）</strong>：模型识别所有正类的能力。</li></ul><p>这三个指标非常重要，因为如果我们只依赖准确率，可能会错过一些潜在的重要信息，尤其是当数据不平衡时。例如，在预测心脏病患者时，假阳性和假阴性都会带来不同的影响，因此精确率和召回率的评估比准确率更为重要。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">predictions = model.predict(X_test)<br>tn, fp, fn, tp = metrics.confusion_matrix(y_test, predictions).ravel()<br><br><span class="hljs-comment"># 打印评估指标</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Accuracy: <span class="hljs-subst">&#123;metrics.accuracy_score(y_test, predictions)&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Precision: <span class="hljs-subst">&#123;metrics.precision_score(y_test, predictions)&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Recall: <span class="hljs-subst">&#123;metrics.recall_score(y_test, predictions)&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><p><strong>结论</strong>：</p><ul><li><strong>准确率</strong>：0.90，模型能够准确预测大部分客户的流失情况。</li><li><strong>精确率</strong>：0.82，模型的精确率较高，意味着在预测流失客户时误判的比例较低。</li><li><strong>召回率</strong>：0.05，召回率非常低，表明模型未能有效地识别出所有的流失客户。尽管精确率较高，但召回率低的原因是模型倾向于预测客户不流失。</li></ul><p>这表明模型更擅长识别“非流失”客户，但在流失客户的预测上存在较大改进空间。</p><h3 id="模型理解"><a class="header-anchor" href="#模型理解"> </a><strong>模型理解</strong></h3><p>为了进一步理解模型，我们可以查看每个特征的重要性。特征重要性反映了每个特征在预测中的作用，可以帮助我们理解哪些特征对模型的预测贡献最大。通过<code>RandomForestClassifier</code>提供的<code>feature_importances_</code>方法，我们可以提取每个特征的重要性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python">feature_importances = pd.DataFrame(&#123;<br>    <span class="hljs-string">&#x27;features&#x27;</span>: X_train.columns,<br>    <span class="hljs-string">&#x27;importance&#x27;</span>: model.feature_importances_<br>&#125;).sort_values(by=<span class="hljs-string">&#x27;importance&#x27;</span>, ascending=<span class="hljs-literal">True</span>).reset_index()<br><br><span class="hljs-comment"># 绘制特征重要性图</span><br>plt.figure(figsize=(<span class="hljs-number">15</span>, <span class="hljs-number">25</span>))<br>plt.title(<span class="hljs-string">&#x27;Feature Importances&#x27;</span>)<br>plt.barh(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(feature_importances)), feature_importances[<span class="hljs-string">&#x27;importance&#x27;</span>], color=<span class="hljs-string">&#x27;b&#x27;</span>, align=<span class="hljs-string">&#x27;center&#x27;</span>)<br>plt.yticks(<span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(feature_importances)), feature_importances[<span class="hljs-string">&#x27;features&#x27;</span>])<br>plt.xlabel(<span class="hljs-string">&#x27;Importance&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure><p><img src="./images/1-%E5%AE%A2%E6%88%B7%E6%B5%81%E5%A4%B1%E9%97%AE%E9%A2%98/feature_importance.webp" alt="Importance v.s. Features"></p><p><strong>结论</strong>：</p><ul><li><strong>最重要的特征</strong>：模型最重要的特征包括净利润、过去 12 个月的消费以及电力订阅的毛利。</li><li><strong>时间因素</strong>：客户的活跃时间（月数）、客户的服务年限以及合同更新的时间也对流失预测有很大影响。</li><li><strong>价格敏感性</strong>：虽然价格敏感性特征（如电力价格）在特征重要性中分布较广，但并不是流失预测的主要驱动因素。</li></ul><h3 id="预测概率与结果保存"><a class="header-anchor" href="#预测概率与结果保存"> </a><strong>预测概率与结果保存</strong></h3><p>最后，我们还可以获得每个客户流失的概率，并将其与实际流失结果一起保存，以便后续分析或验证。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">proba_predictions = model.predict_proba(X_test)<br>probabilities = proba_predictions[:, <span class="hljs-number">1</span>]<br><br>X_test = X_test.reset_index()<br>X_test.drop(columns=<span class="hljs-string">&#x27;index&#x27;</span>, inplace=<span class="hljs-literal">True</span>)<br><br>X_test[<span class="hljs-string">&#x27;churn&#x27;</span>] = predictions.tolist()<br>X_test[<span class="hljs-string">&#x27;churn_probability&#x27;</span>] = probabilities.tolist()<br>X_test.to_csv(<span class="hljs-string">&#x27;out_of_sample_data_with_predictions.csv&#x27;</span>)<br></code></pre></td></tr></table></figure><p><strong>结论</strong>：</p><ul><li>我们成功地将每个客户的流失概率和实际流失标签保存到<code>X_test</code>数据集中，生成了最终的预测结果。这些数据可以用于后续分析和决策支持。</li></ul><h3 id="总结"><a class="header-anchor" href="#总结"> </a><strong>总结</strong></h3><p>通过使用随机森林分类器，我们构建了一个预测客户流失的模型。虽然模型在识别非流失客户方面表现优秀，但在流失客户的预测上还有改进空间。召回率较低提示我们需要进一步优化模型，可能包括重新审视特征工程和模型参数调优。</p><p>此外，特征重要性分析帮助我们理解哪些因素对客户流失的预测最为关键，例如净利润、客户活跃时间和电力消费等。</p>]]></content>
    
    
    <categories>
      
      <category>Projects</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GitHub</tag>
      
      <tag>ML</tag>
      
      <tag>Data_Science</tag>
      
      <tag>Projects</tag>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置自定义域名</title>
    <link href="/2025/02/06/1-%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/"/>
    <url>/2025/02/06/1-%E9%85%8D%E7%BD%AE%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<p>在本篇博客中，我们将介绍如何使用 <strong>GitHub Actions</strong> 来实现 <strong>Hexo 博客的自动化部署</strong>，并且配置 <strong>自定义域名</strong>，确保 GitHub Pages 部署后不会丢失域名设置。</p><hr><h2 id="1-配置-GitHub-Actions"><a class="header-anchor" href="#1-配置-GitHub-Actions"> </a><strong>1. 配置 GitHub Actions</strong></h2><h3 id="1-1-修改-github-workflows-deploy-yml-文件"><a class="header-anchor" href="#1-1-修改-github-workflows-deploy-yml-文件"> </a><strong>1.1 修改 <code>.github/workflows/deploy.yml</code> 文件</strong></h3><p>在 <code>deploy.yml</code> 文件中添加<code>hexo deploy --cname &lt;name&gt;</code>到下面位置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">to</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span>  <span class="hljs-comment"># 部署到 GitHub Pages</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          mkdir -p ~/.ssh/</span><br><span class="hljs-string">          echo &quot;$SSH_PRIVATE_KEY&quot; | tr -d &#x27;\r&#x27; &gt; ~/.ssh/id_rsa</span><br><span class="hljs-string">          chmod 600 ~/.ssh/id_rsa</span><br><span class="hljs-string">          ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts</span><br><span class="hljs-string">          git config --global user.name &quot;$GIT_NAME&quot;</span><br><span class="hljs-string">          git config --global user.email &quot;$GIT_EMAIL&quot;</span><br><span class="hljs-string">          hexo deploy --cname neurowave.tech  # 在这里指定域名</span><br></code></pre></td></tr></table></figure><h2 id="2-配置自定义域名"><a class="header-anchor" href="#2-配置自定义域名"> </a><strong>2. 配置自定义域名</strong></h2><h3 id="2-1-在阿里云配置域名解析"><a class="header-anchor" href="#2-1-在阿里云配置域名解析"> </a><strong>2.1 在阿里云配置域名解析</strong></h3><p>如果你使用的是 <strong>阿里云</strong> 购买的域名，需要在 <strong>阿里云 DNS 控制台</strong> 添加解析记录。</p><ol><li>进入 <strong>阿里云控制台</strong> → <strong>公网 DNS 解析</strong> → <strong>权威域名解析</strong>。</li><li>选择你的域名，点击 <strong>添加记录</strong> 或 <strong>新手引导</strong>。</li><li>选择 <strong>记录类型</strong> 为 <code>CNAME</code>。</li><li>在 <strong>主机记录</strong> 选择：<ul><li><code>www</code>（用于 <code>www.yourdomain.com</code>）</li><li><code>@</code>（用于 <code>yourdomain.com</code>）。</li></ul></li><li>在 <strong>记录值</strong> 中填写你的 GitHub Pages 地址，例如：<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs lua">artintyt.github.<span class="hljs-built_in">io</span><br></code></pre></td></tr></table></figure></li><li>点击 <strong>保存</strong>。</li></ol><h3 id="2-2-生成-CNAME-文件"><a class="header-anchor" href="#2-2-生成-CNAME-文件"> </a><strong>2.2 生成 <code>CNAME</code> 文件</strong></h3><p>如果你的博客使用自定义域名（如 <code>neurowave.tech</code>），你需要在 <code>source/</code> 目录下创建 <code>CNAME</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;neurowave.tech&quot;</span> &gt; <span class="hljs-built_in">source</span>/CNAME<br></code></pre></td></tr></table></figure><p>然后提交到 <code>master</code> branch：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add <span class="hljs-built_in">source</span>/CNAME<br>git commit -m <span class="hljs-string">&quot;Add CNAME file&quot;</span><br>git push origin master<br></code></pre></td></tr></table></figure><p>你也可以手动创建一个叫 <code>CNAME</code> 文件到 <code>source/</code>。</p><h3 id="2-3-确保-CNAME-在-Hexo-部署时不会丢失"><a class="header-anchor" href="#2-3-确保-CNAME-在-Hexo-部署时不会丢失"> </a><strong>2.3 确保 <code>CNAME</code> 在 Hexo 部署时不会丢失</strong></h3><p>在 Hexo 的 <code>_config.yml</code> 文件中，确保 <code>deploy</code> 部分包含 <code>cname</code> 和你的自定义域名：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span>  <span class="hljs-comment"># 你的 GitHub Pages 分支</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">&quot;Deploy blog updates&quot;</span><br>  <span class="hljs-attr">cname:</span> <span class="hljs-string">neurowave.tech</span>  <span class="hljs-comment"># 自定义域名</span><br></code></pre></td></tr></table></figure><h3 id="2-4-在-GitHub-Pages-启用自定义域名"><a class="header-anchor" href="#2-4-在-GitHub-Pages-启用自定义域名"> </a><strong>2.4 在 GitHub Pages 启用自定义域名</strong></h3><ol><li><strong>进入 GitHub 仓库</strong> → <strong>Settings</strong> → <strong>Pages</strong>。</li><li>在 <strong>Custom domain</strong> 输入 <code>neurowave.tech</code>。</li><li><strong>勾选 &quot;Enforce HTTPS&quot;</strong>，确保 HTTPS 正常工作。</li><li>等待 GitHub 解析你的域名，通常需要几分钟。</li></ol><h2 id="3-提交并触发-GitHub-Actions"><a class="header-anchor" href="#3-提交并触发-GitHub-Actions"> </a><strong>3. 提交并触发 GitHub Actions</strong></h2><p>执行以下命令，将 <code>deploy.yml</code> 配置文件提交到 GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .github/workflows/deploy.yml<br>git commit -m <span class="hljs-string">&quot;Add GitHub Actions for Hexo deployment&quot;</span><br>git push origin master  <span class="hljs-comment"># 如果你的远程分支是 master</span><br></code></pre></td></tr></table></figure><p>推送代码后，GitHub Actions 会自动执行部署。</p><h2 id="4-检查-GitHub-Actions-是否成功"><a class="header-anchor" href="#4-检查-GitHub-Actions-是否成功"> </a><strong>4. 检查 GitHub Actions 是否成功</strong></h2><h3 id="4-1-查看-Actions-运行状态"><a class="header-anchor" href="#4-1-查看-Actions-运行状态"> </a><strong>4.1 查看 Actions 运行状态</strong></h3><ol><li>打开 GitHub 仓库。</li><li>点击 <strong>Actions</strong> 选项卡。</li><li>查看最新的 Workflow 运行记录。</li><li>如果显示绿色 ✅，说明部署成功；如果失败，则查看日志分析问题。</li></ol><h3 id="4-2-访问你的博客"><a class="header-anchor" href="#4-2-访问你的博客"> </a><strong>4.2 访问你的博客</strong></h3><p>GitHub Pages 更新可能需要几分钟，稍等后访问：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">https:</span><span class="hljs-comment">//neurowave.tech</span><br></code></pre></td></tr></table></figure><p>如果看到最新内容，说明部署成功！🎉</p><h2 id="5-本地更新博客并推送"><a class="header-anchor" href="#5-本地更新博客并推送"> </a><strong>5. 本地更新博客并推送</strong></h2><p>当你本地修改博客内容后，使用以下命令提交并触发 GitHub Actions：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .<br>git commit -m <span class="hljs-string">&quot;Update blog content&quot;</span><br>git push origin master <br></code></pre></td></tr></table></figure><p>然后等待 GitHub Actions 自动更新你的博客。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><h2 id="6-总结"><a class="header-anchor" href="#6-总结"> </a><strong>6. 总结</strong></h2><ul><li><strong>配置 GitHub Actions</strong>，让博客自动部署。</li><li><strong>创建 <code>CNAME</code> 文件，并确保 Hexo 部署时不会丢失自定义域名</strong>。</li><li><strong>每次 <code>git push</code>，GitHub Actions 自动触发部署</strong>。</li><li><strong>GitHub Pages 自动更新，无需手动运行 <code>hexo deploy</code></strong>。</li></ul><p>这样，你的 Hexo 博客就实现了 <strong>全自动化部署，并且保留自定义域名</strong> 🎉！</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>SSH</tag>
      
      <tag>domain</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用 GitHub Actions 自动部署 Hexo 博客</title>
    <link href="/2025/02/01/1-%E4%BD%BF%E7%94%A8-GitHub-Actions-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-Hexo-%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/02/01/1-%E4%BD%BF%E7%94%A8-GitHub-Actions-%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2-Hexo-%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a class="header-anchor" href="#前言"> </a><strong>前言</strong></h3><p>在本篇博客中，我们将介绍如何使用 <strong>GitHub Actions</strong> 来实现 <strong>Hexo 博客的自动化部署</strong>，让你每次提交新文章时，GitHub Actions 自动编译并部署你的博客到 GitHub Pages，无需手动执行 <code>hexo deploy</code>。同时，我们也会介绍如何使用专门的 <code>gh-pages</code>（或你命名的 <code>ph-pages</code>）分支来存放生成的静态页面，从而保持源码和生成文件的分离。</p><hr><h2 id="1-配置-GitHub-Actions"><a class="header-anchor" href="#1-配置-GitHub-Actions"> </a><strong>1. 配置 GitHub Actions</strong></h2><h3 id="1-1-创建-github-workflows-deploy-yml-文件"><a class="header-anchor" href="#1-1-创建-github-workflows-deploy-yml-文件"> </a><strong>1.1 创建 <code>.github/workflows/deploy.yml</code> 文件</strong></h3><p>在你的 Hexo 博客根目录下执行以下命令，创建 GitHub Actions 配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p .github/workflows<br>nano .github/workflows/deploy.yml<br></code></pre></td></tr></table></figure><p>在 <strong>deploy.yml</strong> 文件中添加以下内容（如果你的远程仓库默认分支为 <code>master</code>，则触发条件与拉取分支都使用 <code>master</code>；如果你使用其他分支，请相应调整）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Blog</span>             <span class="hljs-comment"># GitHub Actions 的名称，可自行命名</span><br><br><span class="hljs-comment"># 当 push 事件发生时触发部署</span><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">master</span>                       <span class="hljs-comment"># 当推送到 master 分支时触发部署（根据你的分支选择）</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span>          <span class="hljs-comment"># 运行环境选择最新的 Ubuntu</span><br><br>    <span class="hljs-attr">steps:</span><br>    <span class="hljs-comment"># 步骤 1：拉取代码</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Checkout</span> <span class="hljs-string">repository</span>     <span class="hljs-comment"># 从 GitHub 仓库拉取代码</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">ref:</span> <span class="hljs-string">master</span>                   <span class="hljs-comment"># 拉取 master 分支代码</span><br><br>    <span class="hljs-comment"># 步骤 2：设置 Node 环境</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Setup</span> <span class="hljs-string">Node.js</span>           <span class="hljs-comment"># 安装 Node.js 环境</span><br>      <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v2</span><br>      <span class="hljs-attr">with:</span><br>        <span class="hljs-attr">node-version:</span> <span class="hljs-string">&#x27;v22&#x27;</span>           <span class="hljs-comment"># 设置 Node.js 版本</span><br><br>    <span class="hljs-comment"># 步骤 3：安装依赖</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">dependencies</span>    <span class="hljs-comment"># 安装 Hexo 和相关依赖</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        npm install -g hexo-cli     # 安装 Hexo 命令行工具</span><br><span class="hljs-string">        npm install                 # 安装项目依赖</span><br><span class="hljs-string"></span><br>    <span class="hljs-comment"># 步骤 4：生成静态文件</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Hexo</span> <span class="hljs-string">Generate</span>            <span class="hljs-comment"># 使用 Hexo 生成静态文件</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        hexo clean                  # 清理旧的生成文件</span><br><span class="hljs-string">        hexo generate               # 生成新的静态文件</span><br><span class="hljs-string"></span><br>    <span class="hljs-comment"># 步骤 5：部署到 GitHub Pages (部署到 gh-pages 分支)</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">to</span> <span class="hljs-string">GitHub</span> <span class="hljs-string">Pages</span>   <span class="hljs-comment"># 使用 Hexo 部署到 GitHub Pages</span><br>      <span class="hljs-attr">env:</span><br>        <span class="hljs-attr">SSH_PRIVATE_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SSH_PRIVATE</span> <span class="hljs-string">&#125;&#125;</span>   <span class="hljs-comment"># 使用 GitHub Secrets 中存储的 SSH 私钥</span><br>        <span class="hljs-attr">GIT_NAME:</span> <span class="hljs-string">&lt;Git</span> <span class="hljs-string">用户名&gt;</span>                           <span class="hljs-comment"># Git 用户名</span><br>        <span class="hljs-attr">GIT_EMAIL:</span> <span class="hljs-string">&lt;Git用户邮箱&gt;</span>             <span class="hljs-comment"># Git 用户邮箱</span><br>      <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">        mkdir -p ~/.ssh/                              # 创建 SSH 配置目录</span><br><span class="hljs-string">        echo &quot;$SSH_PRIVATE_KEY&quot; | tr -d &#x27;\r&#x27; &gt; ~/.ssh/id_rsa  # 将私钥写入文件</span><br><span class="hljs-string">        chmod 600 ~/.ssh/id_rsa                       # 设置私钥权限</span><br><span class="hljs-string">        ssh-keyscan github.com &gt;&gt; ~/.ssh/known_hosts  # 添加 GitHub 的 SSH 公钥到 known_hosts</span><br><span class="hljs-string">        git config --global user.name &quot;$GIT_NAME&quot;     # 配置 Git 用户名</span><br><span class="hljs-string">        git config --global user.email &quot;$GIT_EMAIL&quot;    # 配置 Git 用户邮箱</span><br><span class="hljs-string">        hexo deploy                                   # 使用 Hexo 部署博客</span><br></code></pre></td></tr></table></figure><blockquote><p><strong>注意：</strong></p><ol><li>在 Hexo 配置文件 <code>_config.yml</code> 中，部署部分应配置为使用 <code>gh-pages</code> 分支（或你命名的 <code>ph-pages</code> 分支），例如：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:你的用户名/你的仓库.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">gh-pages</span>   <span class="hljs-comment"># 或者根据你的实际情况设置为 ph-pages</span><br></code></pre></td></tr></table></figure></li><li>这样可以保证你的源代码存放在 <code>master</code> 分支，而生成的静态页面将推送到 <code>gh-pages</code> 分支，从而使博客部署更清晰规范。</li></ol></blockquote><hr><h2 id="2-配置-SSH-密钥"><a class="header-anchor" href="#2-配置-SSH-密钥"> </a><strong>2. 配置 SSH 密钥</strong></h2><h3 id="2-1-生成-SSH-密钥"><a class="header-anchor" href="#2-1-生成-SSH-密钥"> </a><strong>2.1 生成 SSH 密钥</strong></h3><h4 id="检查是否已有-SSH-密钥"><a class="header-anchor" href="#检查是否已有-SSH-密钥"> </a><strong>检查是否已有 SSH 密钥</strong></h4><p>你可以运行下面的命令来确认是否已有 SSH 密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> ~/.ssh<br></code></pre></td></tr></table></figure><p>如果看到 <code>id_rsa</code> 和 <code>id_rsa.pub</code>，说明你已经生成了 SSH 密钥。</p><h4 id="查看密钥内容"><a class="header-anchor" href="#查看密钥内容"> </a><strong>查看密钥内容</strong></h4><ul><li><strong>查看私钥</strong>（不要泄露此文件）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa<br></code></pre></td></tr></table></figure></li><li><strong>查看公钥</strong>（可公开分享）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure></li></ul><h4 id="生成新的-SSH-密钥（如果没有）"><a class="header-anchor" href="#生成新的-SSH-密钥（如果没有）"> </a><strong>生成新的 SSH 密钥（如果没有）</strong></h4><p>如果没有密钥，可以使用下面的命令生成：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -b 4096 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>替换 <code>&quot;your_email@example.com&quot;</code> 为你的 GitHub 绑定邮箱，然后一路按 <strong>Enter</strong> 即可。</p><blockquote><p>注意：如果 Github 说公钥 <code>已经被使用</code> ，可以使用命令再次生成私钥和公钥，同时去 Github 修改项目下的 <code>Setting</code> 就可以了。</p></blockquote><hr><h3 id="2-2-添加公钥到-GitHub"><a class="header-anchor" href="#2-2-添加公钥到-GitHub"> </a><strong>2.2 添加公钥到 GitHub</strong></h3><ol><li>进入 GitHub 仓库页面，点击 <strong>Settings</strong> → <strong>Deploy keys</strong>。</li><li>点击 <strong>&quot;Add deploy key&quot;</strong>。</li><li>在 <strong>Title</strong> 中填写 &quot;GitHub Actions Key&quot;。</li><li>在 <strong>Key</strong> 中粘贴你通过 <code>cat ~/.ssh/id_rsa.pub</code> 获取的公钥内容。</li><li>勾选 <strong>&quot;Allow write access&quot;</strong> 以允许写入权限。</li><li>点击 <strong>&quot;Add key&quot;</strong> 完成设置。</li></ol><hr><h3 id="2-3-添加私钥到-GitHub-Secrets"><a class="header-anchor" href="#2-3-添加私钥到-GitHub-Secrets"> </a><strong>2.3 添加私钥到 GitHub Secrets</strong></h3><ol><li>进入 GitHub 仓库页面，点击 <strong>Settings</strong> → <strong>Secrets and variables</strong> → <strong>Actions</strong>。</li><li>点击 <strong>&quot;New repository secret&quot;</strong>。</li><li>将 <strong>Name</strong> 填写为 <code>SSH_PRIVATE</code>。</li><li>将 <strong>Value</strong> 粘贴你私钥（<code>id_rsa</code>）的内容。</li><li>点击 <strong>&quot;Add secret&quot;</strong> 完成设置。</li></ol><blockquote><p>注意：前面 <strong>deploy.yml</strong> 文件中配置了 <code>SSH_PRIVATE_KEY: $&#123;&#123; secrets.SSH_PRIVATE &#125;&#125;</code> 其中 <code>SSH_PRIVATE</code> 与你写的 <code>Name</code> 对应即可。</p></blockquote><hr><h2 id="3-提交并触发-GitHub-Actions"><a class="header-anchor" href="#3-提交并触发-GitHub-Actions"> </a><strong>3. 提交并触发 GitHub Actions</strong></h2><p>将 <code>deploy.yml</code> 文件提交到仓库，以触发 GitHub Actions 自动部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .github/workflows/deploy.yml<br>git commit -m <span class="hljs-string">&quot;Add GitHub Actions for Hexo deployment&quot;</span><br>git push origin master  <span class="hljs-comment"># 如果你的远程分支是 master</span><br></code></pre></td></tr></table></figure><p>推送代码后，GitHub Actions 会自动运行部署流程，并将 Hexo 生成的静态文件推送到 <code>gh-pages</code> 分支。</p><h3 id="测试-SSH-连接到-GitHub"><a class="header-anchor" href="#测试-SSH-连接到-GitHub"> </a><strong>测试 SSH 连接到 GitHub</strong></h3><p>在 SSH 设置完成后，你可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>如果成功，你会看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Hi ArtinTYT! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><h2 id="4-检查部署状态"><a class="header-anchor" href="#4-检查部署状态"> </a><strong>4. 检查部署状态</strong></h2><h3 id="4-1-查看-GitHub-Actions-状态"><a class="header-anchor" href="#4-1-查看-GitHub-Actions-状态"> </a><strong>4.1 查看 GitHub Actions 状态</strong></h3><ol><li>打开 GitHub 仓库页面，点击 <strong>Actions</strong> 选项卡。</li><li>查看最新的 Workflow 运行记录。如果显示绿色 ✅，说明部署成功；否则查看日志查找错误信息。</li></ol><h3 id="4-2-配置-GitHub-Pages"><a class="header-anchor" href="#4-2-配置-GitHub-Pages"> </a><strong>4.2 配置 GitHub Pages</strong></h3><p>进入 GitHub 仓库页面：</p><ol><li>点击 <strong>Settings</strong> → <strong>Pages</strong>。</li><li>将 <strong>Source</strong> 设置为 <code>gh-pages</code>（或你使用的分支，如 ph-pages）。</li><li>保存设置，等待几分钟后访问：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://artintyt.github.io<br></code></pre></td></tr></table></figure>如果页面显示你的博客内容，则部署成功。</li></ol><h2 id="5-本地更新博客并触发部署"><a class="header-anchor" href="#5-本地更新博客并触发部署"> </a><strong>5. 本地更新博客并触发部署</strong></h2><p>当你在本地更新博客内容后，使用以下命令提交并推送：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo generate<br>hexo deploy<br></code></pre></td></tr></table></figure><p>GitHub Actions 会自动运行并更新静态页面到 <code>gh-pages</code> 分支，GitHub Pages 会随之更新。</p><p>然后等待 GitHub Actions 自动更新你的博客。</p><blockquote><p>注意：当要修改 <code>.github/workflows/deploy.yml</code> 文件时，记得切换到 <code>master</code> 分支，使用以下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout master <br></code></pre></td></tr></table></figure></blockquote><p>记得修改后要提交更改，使用一下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add <span class="hljs-built_in">source</span>/_posts/使用-GitHub-xxxx.md<br>git commit -m <span class="hljs-string">&quot;Save changes to the GitHub Actions deployment post&quot;</span><br><br></code></pre></td></tr></table></figure><h2 id="6-参数的安全隐患及优化方式"><a class="header-anchor" href="#6-参数的安全隐患及优化方式"> </a>6. 参数的安全隐患及优化方式</h2><p>如何安全地存储敏感信息，使用 GitHub Secrets 代替明文配置，你的 <strong>deploy.yml</strong> 里目前可能有类似的内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">GIT_NAME:</span> <span class="hljs-string">&lt;your</span> <span class="hljs-string">username&gt;</span><br>  <span class="hljs-attr">GIT_EMAIL:</span> <span class="hljs-string">&lt;your</span> <span class="hljs-string">email</span> <span class="hljs-string">address&gt;</span><br></code></pre></td></tr></table></figure><h3 id="优化方式：使用-Secret-变量名替代"><a class="header-anchor" href="#优化方式：使用-Secret-变量名替代"> </a>优化方式：使用 Secret 变量名替代</h3><ol><li>进入你的 <strong>GitHub 仓库</strong> → <strong>Settings</strong> → <strong>Secrets and variables</strong> → <strong>Actions</strong></li><li>点击 <strong>New repository secret</strong> 创建 Secrets 变量（之前<code>SSH_PRIVATE</code>同样的地方）：</li></ol><ul><li>GIT_NAME → <code>&lt;your username&gt;</code></li><li>GIT_EMAIL → <code>&lt;your email address&gt;</code></li><li>SSH_PRIVATE_KEY → 存储你的 SSH 私钥</li><li>点击 <strong>Add secret</strong></li></ul><ol start="3"><li>修改 deploy.yml，使用 Secrets：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">env:</span><br>  <span class="hljs-attr">GIT_NAME:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GIT_NAME</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">GIT_EMAIL:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.GIT_EMAIL</span> <span class="hljs-string">&#125;&#125;</span><br>  <span class="hljs-attr">SSH_PRIVATE_KEY:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">secrets.SSH_PRIVATE_KEY</span> <span class="hljs-string">&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>这样，即使别人能看到 <strong>deploy.yml</strong> 文件，也无法获取你的邮箱和 SSH 私钥。</p><h2 id="7-GitHub-Actions-的优点"><a class="header-anchor" href="#7-GitHub-Actions-的优点"> </a><strong>7. GitHub Actions 的优点</strong></h2><p>使用 GitHub Actions 有以下几个明显的优点：</p><ul><li><strong>自动化部署：</strong> 每次代码提交后自动触发构建和部署流程，无需手动干预。</li><li><strong>持续集成：</strong> 可集成测试、代码检查等流程，确保部署前代码质量。</li><li><strong>高度自定义：</strong> 支持自定义工作流程和并行任务，可根据项目需求灵活配置。</li><li><strong>跨平台支持：</strong> 支持在 Ubuntu、Windows、macOS 等不同平台上运行，无需额外环境搭建。</li><li><strong>与 GitHub 深度集成：</strong> 无需额外配置第三方 CI/CD 工具，所有操作均在 GitHub 平台上完成。</li><li><strong>易于监控和调试：</strong> 提供详细的日志记录，可在 GitHub Actions 页面直观查看每一步执行状态。</li></ul><h2 id="总结"><a class="header-anchor" href="#总结"> </a><strong>总结</strong></h2><ul><li><strong>配置 GitHub Actions</strong>：实现博客自动部署，无需手动执行 <code>hexo deploy</code>。</li><li><strong>设置 SSH 密钥</strong>：保证 GitHub Actions 有权限将生成的静态页面推送到 <code>gh-pages</code> 分支。</li><li><strong>分支管理</strong>：源代码存放在 <code>master</code> 分支，生成的静态页面存放在 <code>gh-pages</code>（或 ph-pages）分支，使仓库结构清晰。</li><li><strong>持续自动化</strong>：每次 <code>git push</code> 后，GitHub Actions 自动触发部署流程，确保博客内容始终保持最新状态。</li></ul><p>通过以上配置，你的 Hexo 博客将实现全自动化部署，并利用 GitHub Actions 强大的集成优势，让博客更新变得轻松高效！🎉</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Conda环境配置</title>
    <link href="/2025/01/24/2-conda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/01/24/2-conda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<p>以下步骤基于 MacOS 系统（MacBookAir M2），如果是 Windows 系统，命令会不同。</p><h2 id="1-官网下载安装"><a class="header-anchor" href="#1-官网下载安装"> </a>1. 官网下载安装</h2><p>下载mini conda：<a href="https://www.anaconda.com/download/success">https://www.anaconda.com/download/success</a></p><h3 id="1-1-安装完成后测试"><a class="header-anchor" href="#1-1-安装完成后测试"> </a>1.1 安装完成后测试</h3><p>使用以下命令查看版本和测试安装是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda --verison<br></code></pre></td></tr></table></figure><p>Terminal显示如下状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">conda 24.11.1<br></code></pre></td></tr></table></figure><h3 id="1-2-验证Base环境"><a class="header-anchor" href="#1-2-验证Base环境"> </a>1.2 验证Base环境</h3><p>Conda 的 (base) 表示你已经激活了默认环境。如果想查看安装的环境列表，可以运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda <span class="hljs-built_in">env</span> list<br></code></pre></td></tr></table></figure><p>可能会看到下面的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># conda environments:</span><br><span class="hljs-comment">#</span><br>base                 * /opt/miniconda3<br></code></pre></td></tr></table></figure><h3 id="1-3-查看默认Python版本"><a class="header-anchor" href="#1-3-查看默认Python版本"> </a>1.3 查看默认Python版本</h3><p>查看 conda 默认的 Python 版本，后面会创建指定 Python 某版本的环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python --version<br></code></pre></td></tr></table></figure><p>可能看到（默认的，可能新 Conda 环境不会使用）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">Python 3.12.8<br></code></pre></td></tr></table></figure><h2 id="2-Conda常用命令"><a class="header-anchor" href="#2-Conda常用命令"> </a>2. Conda常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda –<span class="hljs-built_in">help</span> <span class="hljs-comment"># 查看帮助</span><br>conda info <span class="hljs-comment"># 查看 conda 信息</span><br>conda version  <span class="hljs-comment"># 查看 conda 版本</span><br>conda update conda  <span class="hljs-comment"># 更新Conda（慎用）</span><br>conda clean –all <span class="hljs-comment"># 清理不再需要的包</span><br>conda &lt;指令&gt; <span class="hljs-built_in">help</span> <span class="hljs-comment"># 查看某一个指令的详细帮助</span><br>conda config show <span class="hljs-comment">#查看 conda 的环境配置</span><br>conda clean -p  <span class="hljs-comment"># 清理没有用，没有安装的包</span><br>conda clean -t  <span class="hljs-comment"># 清理 tarball</span><br>conda clean all  <span class="hljs-comment"># 清理所有包和 conda 的缓存文件</span><br></code></pre></td></tr></table></figure><h2 id="3-环境管理"><a class="header-anchor" href="#3-环境管理"> </a>3. 环境管理</h2><h3 id="3-1-查看-Conda-环境路径是否正确设置"><a class="header-anchor" href="#3-1-查看-Conda-环境路径是否正确设置"> </a>3.1 查看 Conda 环境路径是否正确设置</h3><p>通过一下命令查看环境设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">conda config --show<br></code></pre></td></tr></table></figure><p>可能会看到你的环境存储路径如下：</p><ol><li><code>/opt/miniconda3/envs</code>（默认路径，位于 Miniconda 安装目录）</li><li><code>/Users/username/.conda/envs</code>（用户目录下的备用路径）</li></ol><p>这些路径是 Conda 的默认配置，如果你对存储位置没有特别要求，无需修改 <code>envs_dirs</code>。</p><h3 id="3-2-envs-dirs是什么？"><a class="header-anchor" href="#3-2-envs-dirs是什么？"> </a>3.2 envs_dirs是什么？</h3><p>在 Conda 中，<code>envs</code> 是用来存储 虚拟环境（environments） 的目录。虚拟环境是一个独立的 Python 运行环境，包含特定的 Python 版本以及该环境所需的库和依赖。</p><h4 id="什么是-Conda-环境？"><a class="header-anchor" href="#什么是-Conda-环境？"> </a>什么是 Conda 环境？</h4><p>Conda 环境是一种隔离机制，用于防止不同项目之间的库和依赖冲突。每个环境都可以有自己的：</p><ul><li>Python 版本（例如 <code>Python 3.8</code> 或 <code>Python 3.12</code>）。</li><li>库版本（例如 <code>NumPy 1.20</code> 和 <code>NumPy 1.25</code> 可以在不同环境中共存）。</li><li>配置和依赖。</li></ul><h4 id="envs-是做什么的？"><a class="header-anchor" href="#envs-是做什么的？"> </a>envs 是做什么的？</h4><p>Conda 使用 <code>envs</code> 目录来存储所有的虚拟环境。默认情况下：</p><ul><li>主环境 (base) 会存储在 Conda 的安装目录（例如 <code>/opt/miniconda3</code> 或 <code>/opt/anaconda3</code>）。</li><li>其他环境 会存储在 <code>envs</code> 文件夹中。例如：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 默认路径下，`envs` 的位置</span><br>/opt/miniconda3/envs/<br></code></pre></td></tr></table></figure>每个虚拟环境都会有一个独立的子目录。例如，如果你创建了名为 myenv 的环境，它可能位于：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/opt/miniconda3/envs/myenv/<br></code></pre></td></tr></table></figure></li></ul><h4 id="为什么需要-Conda-环境？"><a class="header-anchor" href="#为什么需要-Conda-环境？"> </a>为什么需要 Conda 环境？</h4><p>以下是使用 Conda 环境的几个关键优势：</p><ol><li>避免冲突：不同项目可能需要不同的 Python 和库版本，环境隔离可以避免这些冲突。</li><li>提高灵活性：可以根据需求快速切换环境。</li><li>可移植性：可以轻松导出和导入环境（通过 <code>.yml</code> 文件）。</li><li>安全性：在独立环境中安装和测试库，不会影响系统全局配置。</li></ol><h3 id="3-3-如何管理-Conda-环境？"><a class="header-anchor" href="#3-3-如何管理-Conda-环境？"> </a>3.3 如何管理 Conda 环境？</h3><h4 id="1-查看现有-Conda-环境"><a class="header-anchor" href="#1-查看现有-Conda-环境"> </a>1. 查看现有 Conda 环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda <span class="hljs-built_in">env</span> list<br></code></pre></td></tr></table></figure><h4 id="2-创建新环境"><a class="header-anchor" href="#2-创建新环境"> </a>2. 创建新环境</h4><p>使用 conda 可以创建相互隔离的 Python 环境，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 语法</span><br>conda create name &lt;env_name&gt; python=&lt;version&gt; [package_name1]<br>[package_name2] [...]<br><br><span class="hljs-comment"># 样例 创建一个名为 learn 的环境，python 版本为3.10是3.10.XX最新的版本。</span><br>conda create name modelscope python=3.10 <br><span class="hljs-comment"># name 可以简写为 -n</span><br></code></pre></td></tr></table></figure><p>如果不指定 Python 版本，默认是 base 里面的 Python 版本。</p><p>通过 <code>conda env list</code> 查看刚刚创建的环境如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># conda environments:</span><br><span class="hljs-comment">#</span><br>base                 * /opt/miniconda3<br>modelscope             /opt/miniconda3/envs/modelscope<br></code></pre></td></tr></table></figure><p>可以看到有一个新的环境叫 <code>modelscope</code>。</p><h4 id="3-激活-切换-环境"><a class="header-anchor" href="#3-激活-切换-环境"> </a>3. 激活(切换)环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate modelscope<br></code></pre></td></tr></table></figure><h4 id="4-退出环境"><a class="header-anchor" href="#4-退出环境"> </a>4. 退出环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda deactivate<br></code></pre></td></tr></table></figure><h4 id="5-删除环境"><a class="header-anchor" href="#5-删除环境"> </a>5. 删除环境</h4><p>退出到 <code>base</code> 环境再执行删除环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 语法：conda remove --name &lt;conda name&gt; --all</span><br><br>conda remove --name modelscope --all<br></code></pre></td></tr></table></figure><h4 id="6-克隆环境"><a class="header-anchor" href="#6-克隆环境"> </a>6. 克隆环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 语法：conda create --name &lt;NEW_ENV_NAME&gt; --clone &lt;OLD_ENV_NAME&gt;</span><br><br>conda create --name NEWclone --<span class="hljs-built_in">clone</span> modelscope<br></code></pre></td></tr></table></figure><h4 id="6-指定-envs-目录"><a class="header-anchor" href="#6-指定-envs-目录"> </a>6. 指定 envs 目录</h4><p>默认情况下，Conda 会将环境存储在其安装目录的 <code>envs</code> 文件夹中。如果需要自定义，可以通过设置 <code>envs_dirs</code> 改变存储路径（例如将环境存储到外部硬盘）。</p><p>设置命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --add envs_dirs /path/to/custom_envs<br></code></pre></td></tr></table></figure><h4 id="7-导出环境"><a class="header-anchor" href="#7-导出环境"> </a>7. 导出环境</h4><p>将当前环境导出为一个YAML文件，方便共享：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 语法 conda env export &gt; &lt;filename.yml&gt;</span><br>conda <span class="hljs-built_in">env</span> <span class="hljs-built_in">export</span> &gt; environment.yml<br></code></pre></td></tr></table></figure><p>项目经理可能给你一个配置文件，然后用配置文件创建新的环境。</p><h4 id="8-导入环境：从文件创建环境"><a class="header-anchor" href="#8-导入环境：从文件创建环境"> </a>8. 导入环境：从文件创建环境</h4><p>使用YAML文件创建一个新环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 语法 conda env create -f &lt;filename.yml&gt; -n &lt;new environment name&gt;</span><br>conda <span class="hljs-built_in">env</span> create -f environment.yml -n newenvi<br></code></pre></td></tr></table></figure><p>如果不指定新名字， 可以不加后面 <code>-n &lt;new environment name&gt;</code>。</p><h3 id="3-4-总结"><a class="header-anchor" href="#3-4-总结"> </a>3.4 总结</h3><ul><li><code>envs</code> 是 Conda 用来存储虚拟环境的文件夹。</li><li>Conda 环境有助于管理不同项目的依赖，避免冲突。</li><li>默认配置已经足够大部分场景，只有特殊需求时才需要修改 <code>envs</code> 的存储路径。</li></ul><h2 id="4-包管理"><a class="header-anchor" href="#4-包管理"> </a>4. 包管理</h2><p>一旦激活了环境，你就可以使用 conda 在当前环境下安装你所需要的包。</p><h3 id="4-1-安装包"><a class="header-anchor" href="#4-1-安装包"> </a>4.1 安装包</h3><p>在激活的环境中安装包，例如安装NumPy：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install numpy<br></code></pre></td></tr></table></figure><p>没有指定是最新版本，一般项目会指定版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install numpy=1.18<br></code></pre></td></tr></table></figure><p>可以查看已经下好的包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip list<br></code></pre></td></tr></table></figure><h3 id="4-2-更新包"><a class="header-anchor" href="#4-2-更新包"> </a>4.2 更新包</h3><p>更新某个包到最新版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda update numpy<br></code></pre></td></tr></table></figure><p>更新<strong>所有</strong>包到最新版本，但是不建议用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda update --all<br></code></pre></td></tr></table></figure><p>执行命令后，Conda 将会对版本进行比较并列出可以升级的版本。同时，也会告知用<br>户其他相关包也会升级到相应版本。当较新的版本可以用于升级时，终端会显示<br>Proceed ([y]/n)? ，此时输入 y 即可进行升级。</p><h3 id="4-3-卸载包"><a class="header-anchor" href="#4-3-卸载包"> </a>4.3 卸载包</h3><p>如果不再需要某个包，可以将其卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda remove numpy<br></code></pre></td></tr></table></figure><h3 id="4-4-查看环境所有包"><a class="header-anchor" href="#4-4-查看环境所有包"> </a>4.4 查看环境所有包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda list<br></code></pre></td></tr></table></figure><p>查看当前环境中已经安装的所有包（base 和 项目环境<code>&lt;modelscope&gt;</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda list<br></code></pre></td></tr></table></figure><h3 id="4-5-搜索包"><a class="header-anchor" href="#4-5-搜索包"> </a>4.5 搜索包</h3><p>搜索可用的包及其版本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda search &lt;package-name&gt;<br></code></pre></td></tr></table></figure><h2 id="5-使用通道"><a class="header-anchor" href="#5-使用通道"> </a>5. 使用通道</h2><p>Conda 通道（Channel）是 Conda 用来查找和下载软件包的源。通道就像是软件仓库，用户可以从这些通道中获取需要的软件包。理解和有效管理 Conda 通道，可以帮助用户更好地控制软件包的来源、版本以及稳定性。</p><h3 id="5-1-主要通道"><a class="header-anchor" href="#5-1-主要通道"> </a>5.1 主要通道</h3><ul><li><strong>默认通道</strong>：这是Conda自带的官方通道，由 Anaconda 维护，包含了常用的数据科学和机器学习包。默认通道提供的包经过测试和优化，通常是稳定且值得信赖的。</li><li><strong>Conda-Forge</strong>：Conda-Forge是一个社区驱动的通道，拥有数量庞大的软件包和活跃的维护者社区。通常情况下，Conda-Forge提供更多的最新软件包版本，对于一些在默认通道中没有的包来说尤为重要。由于是社区维护，更新速度快，适合需要最新特性和支持的用户。</li><li><strong>Bioconda</strong>：专为生物信息学和生物数据分析设计的通道。包含很多用于生物数据处理和分析的工具。</li></ul><h3 id="5-2-查看已配置的通道"><a class="header-anchor" href="#5-2-查看已配置的通道"> </a>5.2 查看已配置的通道</h3><p>令查看当前配置的通道列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --show channels<br></code></pre></td></tr></table></figure><h3 id="5-3-添加新的通道"><a class="header-anchor" href="#5-3-添加新的通道"> </a>5.3 添加新的通道</h3><p>如果需要从其他通道安装包，可以将其添加到Conda配置中。例如，添加CondaForge：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --add channels conda-forge<br></code></pre></td></tr></table></figure><h3 id="5-4-设置通道顺序"><a class="header-anchor" href="#5-4-设置通道顺序"> </a>5.4 设置通道顺序</h3><p>通道是按顺序搜索的，优先使用在前面的通道。可以通过以下命令调整顺序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --<span class="hljs-built_in">set</span> channel_priority strict<br></code></pre></td></tr></table></figure><p>使用 <code>strict</code> 优先级时，Conda 会严格按照通道顺序来选择包。</p><h3 id="5-5-删除通道"><a class="header-anchor" href="#5-5-删除通道"> </a>5.5 删除通道</h3><p>如果不需要某个通道，可以将其移除：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config remove channels &lt;channel-name&gt;<br></code></pre></td></tr></table></figure><h3 id="5-6-临时使用特定通道"><a class="header-anchor" href="#5-6-临时使用特定通道"> </a>5.6 临时使用特定通道</h3><p>你可以在安装包时临时指定通道，而不改变全局配置。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install package-name -c conda-forge<br></code></pre></td></tr></table></figure><p>这样做会从 Conda-Forge 通道安装指定的包。</p><h3 id="5-7-通道优先级"><a class="header-anchor" href="#5-7-通道优先级"> </a>5.7 通道优先级</h3><p>Conda 允许设置通道优先级，以决定从哪个通道下载软件包。默认情况下，Conda会<br>根据通道列表的顺序依次查找包。你可以通过以下命令启用或禁用通道优先级：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config <span class="hljs-built_in">set</span> channel_priority <span class="hljs-literal">true</span>  <span class="hljs-comment"># 启用优先级</span><br>conda config <span class="hljs-built_in">set</span> channel_priority <span class="hljs-literal">false</span> <span class="hljs-comment"># 禁用优先级</span><br></code></pre></td></tr></table></figure><p>启用优先级后，Conda会严格根据通道顺序来选择包，确保从首选通道安装。</p><h3 id="5-8-创建自定义通道"><a class="header-anchor" href="#5-8-创建自定义通道"> </a>5.8 创建自定义通道</h3><p>如果你需要在团队中共享包，或者需要托管私有包，可以创建自己的Conda通道。自定义通道可以通过简单的 HTTP 服务器（如 NGINX 或 Apache）托管，或者使用 Anaconda 的企业解决方案。</p><h2 id="6-设置镜像"><a class="header-anchor" href="#6-设置镜像"> </a>6. 设置镜像</h2><p>为了提高 Conda 包的下载速度，特别是在网络连接到默认的 Conda 服务器速度较慢的情况下,设置国内镜像（或其他更接近你的地理位置的镜像）是一个常见且有效的方法。</p><h3 id="6-1-设置-Conda-镜像的步骤"><a class="header-anchor" href="#6-1-设置-Conda-镜像的步骤"> </a>6.1 设置 Conda 镜像的步骤</h3><h4 id="方法一：通过命令行配置"><a class="header-anchor" href="#方法一：通过命令行配置"> </a>方法一：通过命令行配置</h4><p>你可以使用conda config命令来添加镜像。例如，使用清华大学的Anaconda镜像。</p><ul><li>打开命令提示符或终端。</li><li>添加镜像URL：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/bioconda<br>conda config add channels<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/menpo<br>conda config <span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure>默认情况下，conda config 添加的通道会排在列表的头部，但你可以通过以下命令来<br>确认顺序：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config show channels<br></code></pre></td></tr></table></figure></li></ul><h4 id="方法二：通过修改配置文件"><a class="header-anchor" href="#方法二：通过修改配置文件"> </a>方法二：通过修改配置文件</h4><p>你也可以直接修改 Conda 的配置文件来设置镜像：</p><ul><li>找到并编辑 Conda 的配置文件：<code>~/.condarc</code>（Linux和macOS）或 <code>C:\Users&lt;用户名&gt;.condarc</code>（Windows）。TUNA 提供了 Anaconda 仓库与第三方源（conda-forge、msys2、pytorch等，各系统都可以通过修改用户目录下的 <code>.condarc</code> 文件来使用 TUNA 镜像源。Windows 用户无法直接创建名为 <code>.condarc</code> 的文件，可先执行 <code>conda config –set show_channel_urls yes</code> 生成该文件之后再修改。</li><li>添加或修改如下内容：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">channels:<br>- defaults<br>show_channel_urls: <span class="hljs-literal">true</span><br>default_channels:<br>- https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br>- https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r<br>- https: mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2<br>custom_channels:<br>conda-forge: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>msys2: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>bioconda: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>menpo: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>pytorch: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>pytorch-lts: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>simpleitk: https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>deepmodeling:<br>https: mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/<br></code></pre></td></tr></table></figure></li></ul><p>运行 <code>conda clean -i</code> 清除索引缓存，保证用的是镜像站提供的索引。</p><h4 id="验证和测试"><a class="header-anchor" href="#验证和测试"> </a>验证和测试</h4><p>在设置完镜像后，你可以通过安装软件包来测试镜像是否工作正常。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install numpy<br></code></pre></td></tr></table></figure><p>查看输出的信息，确保包是从你设置的镜像URL下载的。</p><h2 id="Mamba-使用"><a class="header-anchor" href="#Mamba-使用"> </a>Mamba 使用</h2><p>Mamba 是一个用于管理 Conda 环境和包的开源工具，旨在解决 Conda 在处理大型环境时的速度和性能问题。它与 Conda 兼容，但提供更快的依赖解析和包安装，这使得它在处理复杂环境时更加高效。</p><h3 id="Mamba-的关键特点"><a class="header-anchor" href="#Mamba-的关键特点"> </a>Mamba 的关键特点</h3><ul><li><strong>快速的依赖解析</strong>： Mamba 使用一个高效的 C++ 库进行依赖解析，这使得在面对复杂的包依赖时能更快地找到解决方案。</li><li><strong>并行下载</strong>：Mamba 可以并行下载和安装包，这大大减少了安装时间，特别是在需要下载大量包的情况下。</li><li><strong>与 Conda 兼容</strong>：Mamba 可以无缝替代 Conda 的命令，你可以在几乎所有 Conda 命令中直接使用 mamba 来替换 conda。</li><li><strong>更好的用户体验</strong>：提供更直观的输出信息和进度条，让用户可以更清晰地了解安装进度和过程。</li></ul><h3 id="安装-Mamba"><a class="header-anchor" href="#安装-Mamba"> </a>安装 Mamba</h3><p>要安装 Mamba，你首先需要一个 Conda 环境。以下是在已有 Conda 环境中安装 Mamba 的步骤：<br>如果你希望在特定环境中安装 Mamba，可以先激活该环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate myenv<br></code></pre></td></tr></table></figure><p>你可以通过 Conda-Forge 通道安装 Mamba，因为 Mamba 在该通道上维护得很好：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install mamba -n base -c conda-forge<br></code></pre></td></tr></table></figure><p>这里 <code>-n base</code> 表示将 Mamba 安装在 base 环境中，这样你可以在任何环境中使用 Mamba。</p><h3 id="使用-Mamba"><a class="header-anchor" href="#使用-Mamba"> </a>使用 Mamba</h3><p>Mamba可以直接替代 Conda 的命令。以下是一些常见的 Conda 命令及其 Mamba 等效用法：</p><ul><li>创建环境：mamba create –name myenv python=3.8</li><li>激活环境：conda activate myenv （Mamba不改变环境激活命令，你仍然使用 Conda 的激活命令）</li><li>安装包：mamba install numpy</li><li>更新包：mamba update numpy</li><li>删除包：mamba remove numpy</li><li>更新环境中的所有包：mamba update –all</li></ul><h3 id="优势"><a class="header-anchor" href="#优势"> </a>优势</h3><ul><li>速度：Mamba 在处理包管理和环境解决时速度快得多，这对大环境尤其有用。</li><li>效率：并行下载和安装机制使得整体过程更加高效。</li><li>兼容性：能够无缝替代 Conda，并与其生态系统兼容。</li></ul><h3 id="局限性"><a class="header-anchor" href="#局限性"> </a>局限性</h3><ul><li>新兴工具：作为一个较新的工具，Mamba可能在某些边缘情况下不如 Conda 稳定。</li><li>社区支持：虽然 Mamba 的社区在快速增长，但它仍然没有 Conda 那么成熟。</li></ul><h2 id="Jupyter-Lab-使用"><a class="header-anchor" href="#Jupyter-Lab-使用"> </a>Jupyter Lab 使用</h2><h3 id="Jupyter-介绍"><a class="header-anchor" href="#Jupyter-介绍"> </a>Jupyter 介绍</h3><p>JupyterLab 是最新的基于 Web 的交互式开发环境，适用于 notebooks、代码和数据。其灵活的界面允许用户配置和安排数据科学、科学计算、计算新闻和机器学习中的工作流程。模块化设计允许扩展来扩展和丰富功能。</p><h3 id="Jupyter-安装使用"><a class="header-anchor" href="#Jupyter-安装使用"> </a>Jupyter 安装使用</h3><p>使用 安装 JupyterLab ： pip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install jupyterlab<br></code></pre></td></tr></table></figure><p>注意：如果您使用 conda 或 mamba 安装 JupyterLab，我们建议使用 condaforge 通道。安装后，使用以下命令启动 JupyterLab：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">jupyter lab<br></code></pre></td></tr></table></figure><h3 id="PyCharm-中使用-Conda-环境"><a class="header-anchor" href="#PyCharm-中使用-Conda-环境"> </a>PyCharm 中使用 Conda 环境</h3><ol><li>创建项目所需要的虚拟环境</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n llamaindex-rag python=3.10<br></code></pre></td></tr></table></figure><ol start="2"><li><p>创建项目，选择 自定义环境 ，类型选择 Conda ，环境选择 <code>llamaindex-rag</code> ，点击 <code>创建</code> 即可.</p></li><li><p>查看项目环境配置</p></li></ol><p>注意：项目中需要另外的依赖库，直接到 <code>Conda Powershell Prompt</code> 终端下，激活 <code>llamaindex-rag</code> 环境，使用 <code>pip</code> 安装依赖库即可！</p><h3 id="关于-modelscope-的常用指令"><a class="header-anchor" href="#关于-modelscope-的常用指令"> </a>关于 modelscope 的常用指令</h3><p>我们会先用 conda 创建项目，然后激活项目再下载库或模型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">pip install modelscope<br></code></pre></td></tr></table></figure><p>一般在项目中，我们会获得一个 <code>requirements.txt</code> 文件，里面写好了 各种配置的版本 比如 <code>python=3.10</code>，然后使用下面安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r ./requirements.txt<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>LLM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>macOS</tag>
      
      <tag>Conda</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSH 连接 GitHub：告别 Token</title>
    <link href="/2025/01/18/1-SSH-%E8%BF%9E%E6%8E%A5-GitHub%EF%BC%9A%E5%91%8A%E5%88%AB-Token/"/>
    <url>/2025/01/18/1-SSH-%E8%BF%9E%E6%8E%A5-GitHub%EF%BC%9A%E5%91%8A%E5%88%AB-Token/</url>
    
    <content type="html"><![CDATA[<p>在我开始使用 GitHub 管理代码和项目的过程中，我一直采用 token 认证的方式进行操作。这种方式简单快捷，适合大多数情况。然而，随着需求的变化，特别是在进行自动化部署时，我意识到使用 SSH 连接 GitHub会更加高效、安全。今天，我想分享一下从 token 认证切换到 SSH 认证的过程，以及成功连接并部署 GitHub 的经历。</p><h2 id="为什么选择-SSH？"><a class="header-anchor" href="#为什么选择-SSH？"> </a>为什么选择 SSH？</h2><p>虽然 token 认证在某些情况下非常方便，但它也有一些缺点：</p><ul><li><strong>安全性</strong>：每次操作都需要使用 token，这可能导致 token 泄漏或滥用的风险。</li><li><strong>操作繁琐</strong>：每次访问仓库时，都需要手动输入 token或者将它写入本地PATH中，尤其是在多次推送或拉取代码的情况下会很麻烦。</li></ul><p>相比之下，SSH 认证通过使用公钥和私钥进行加密传输，大大提高了安全性，而且一旦配置完成，就不再需要每次输入凭证。更重要的是，它能为像自动化部署、CI/CD 等工作流提供更好的支持。</p><h2 id="从-Token-到-SSH：配置过程"><a class="header-anchor" href="#从-Token-到-SSH：配置过程"> </a>从 Token 到 SSH：配置过程</h2><h3 id="1-配置-Git-用户名和邮箱"><a class="header-anchor" href="#1-配置-Git-用户名和邮箱"> </a>1. 配置 Git 用户名和邮箱</h3><p>在设置 SSH 之前，首先需要配置你的 Git 用户名和邮箱，这两个信息将用于提交记录中。这也是 Git 操作的基础设置。</p><p>打开终端，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;username&quot;</span><br>git config --global user.email <span class="hljs-string">&quot;your_email@outlook.com&quot;</span><br></code></pre></td></tr></table></figure><p>根据你的<code>username</code>名字和<code>your_email@outlook.com</code>电子邮件地址。这些信息会出现在每次提交记录中。</p><h3 id="2-生成-SSH-密钥对"><a class="header-anchor" href="#2-生成-SSH-密钥对"> </a>2. 生成 SSH 密钥对</h3><p>接下来，我需要在本地生成一个新的 SSH 密钥对。SSH 密钥对包含两个部分：公钥和私钥，公钥可以分享给 GitHub，而私钥则保存在本地计算机上，始终保持私密。</p><p>生成密钥对，使用 <code>ssh-keygen</code> 命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>这里，<code>-t ed25519</code> 表示生成 Ed25519 类型的密钥，<code>-C</code> 后面的参数是一个注释，用于标识该密钥。</p><p>执行命令后，系统会提示你选择密钥文件的存储位置。通常默认存储路径为 <code>~/.ssh/id_ed25519</code>，按 Enter 键即可。</p><p>然后系统会提示你设置一个密码用于加密 SSH 密钥文件。这个密码是可选的，你可以选择不设置，直接按<code>Enter</code>键。</p><h3 id="3-创建-ssh-目录（如果没有）"><a class="header-anchor" href="#3-创建-ssh-目录（如果没有）"> </a>3. 创建 .ssh 目录（如果没有）</h3><p>没有会报错：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-keyword">cd</span>: <span class="hljs-keyword">no</span> such <span class="hljs-keyword">file</span> or directory: /Users/your_username/.ssh<br></code></pre></td></tr></table></figure><p>说明系统中没有 <code>.ssh</code> 目录，可以手动创建该目录。可以使用以下命令来确保目录存在：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/.ssh<br></code></pre></td></tr></table></figure><p>这样就可以创建 <code>.ssh</code> 目录，用于存放你的 SSH 密钥文件。</p><h3 id="4-将-SSH-公钥添加到-GitHub"><a class="header-anchor" href="#4-将-SSH-公钥添加到-GitHub"> </a>4. 将 SSH 公钥添加到 GitHub</h3><p>生成 SSH 密钥对后，下一步是将公钥添加到 GitHub 账户，以便 GitHub 识别你的身份。</p><ol><li><p>打开公钥文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_ed25519.pub<br></code></pre></td></tr></table></figure><p>这将显示你的公钥。复制该公钥内容。</p></li><li><p>登录 GitHub，访问GitHub SSH 设置页面先点头像：<br><code>Settings</code> -&gt; <code>SSH and GPG keys</code> -&gt; <code>New SSH key</code></p></li><li><p>点击 &quot;New SSH key&quot;，输入一个标题（例如 &quot;My MacBook SSH Key&quot;），然后将刚才复制的公钥粘贴到 &quot;Key&quot; 文本框中。</p></li><li><p>点击 &quot;Add SSH key&quot; 完成添加。</p></li></ol><h3 id="5-配置-SSH-客户端"><a class="header-anchor" href="#5-配置-SSH-客户端"> </a>5. 配置 SSH 客户端</h3><p>接下来，我需要配置 SSH 客户端，让它使用正确的密钥连接到 GitHub。编辑 <code>~/.ssh/config</code> 文件（如果没有该文件，可以手动创建），并添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host github.com<br>  Hostname ssh.github.com<br>  Port 443<br>  User git<br>  IdentityFile ~/.ssh/id_ed25519<br></code></pre></td></tr></table></figure><p>这段配置告诉 SSH 客户端，在连接 GitHub 时使用 <code>~/.ssh/id_ed25519</code> 作为私钥，并通过端口 443 连接（这个端口通常会被网络防火墙允许）。</p><h3 id="6-测试-SSH-连接"><a class="header-anchor" href="#6-测试-SSH-连接"> </a>6. 测试 SSH 连接</h3><p>配置完成后，我使用以下命令测试 SSH 连接是否成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>如果一切正常，终端会显示如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs BASH">Hi Your_uesrname! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure><p>这表明你已经成功通过 SSH 连接到 GitHub。</p><h3 id="7-修改Hexo配置文件"><a class="header-anchor" href="#7-修改Hexo配置文件"> </a>7. 修改Hexo配置文件</h3><p>修改Myblog或者Hexo下的配置文件<code>—config.yml</code>，找到<code>deploy</code>：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:&lt;USERNAME&gt;/&lt;NAME.github.io&gt;.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure><h2 id="总结"><a class="header-anchor" href="#总结"> </a>总结</h2><p>从使用 token 认证切换到 SSH 认证，不仅提高了安全性，还简化了操作流程。虽然设置过程稍显复杂，但一旦配置成功，它为我节省了大量的时间和精力，尤其是在进行自动化部署和持续集成时。通过这种方式，我能够更加高效地管理 GitHub 上的代码和项目。</p><p>如果你还在使用 token 方式与 GitHub 进行交互，我强烈建议你尝试一下 SSH 认证。它不仅能提供更高的安全性，也能让你的开发工作更加便捷。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>SSH</tag>
      
      <tag>Token</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>成功解决Error:Spawn failed错误</title>
    <link href="/2025/01/18/1-%E8%A7%A3%E5%86%B3Error-Spawn-failed%E9%94%99%E8%AF%AF/"/>
    <url>/2025/01/18/1-%E8%A7%A3%E5%86%B3Error-Spawn-failed%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<p>在使用 Hexo 框架将博客部署到 GitHub 时，总是遇到了 <code>Error: Spawn failed</code> 错误，具体错误信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Error: Spawn failed<br>    at ChildProcess.&lt;anonymous&gt; (/Users/&lt;Username&gt;/hexo-blog/node_modules/hexo-deployer-git/node_modules/hexo-util/lib/spawn.js:51:21)<br>    at ChildProcess.emit (node:events:524:28)<br>    at ChildProcess._handle.onexit (node:internal/child_process:293:12)<br></code></pre></td></tr></table></figure><p>通过查看 Hexo 官方文档发现，或许是 <code>Git</code> 包不完整导致的 <code>Error: Spawn failed</code> 错误。在检查 macOS系统 后发现自带一个不完整版 Git ，需要通过 <code>Homebrew</code> 来安装 Git 最新版本。</p><p>所以本文将介绍安装配置 <code>Homebrew</code> 和 <code>Git</code>，最终解决这个问题。同时推荐更换 <code>Token</code>，使用 <code>SSH</code> 来部署项目，下一篇文章介绍如何更换和配置 <code>SSH</code> ，做到丝滑部署项目不卡顿。</p><hr><h3 id="1-参考-Hexo-官方文档："><a class="header-anchor" href="#1-参考-Hexo-官方文档："> </a>1. 参考 Hexo 官方文档：</h3><p>首先，我查阅了 <a href="https://hexo.io/docs/">Hexo 官方文档</a> <strong>再次确认</strong>安装和部署的相关步骤。发现我并没有安装<a href="https://brew.sh/">Homebrew</a>。</p><h3 id="2-检查-Homebrew-和-Git"><a class="header-anchor" href="#2-检查-Homebrew-和-Git"> </a>2. 检查 Homebrew 和 Git</h3><p>根据错误提示，问题可能与 Git 的配置有关。通过查看系统环境，发现我的 MacBook Air M2 使用的是 Apple 自带的 Git，而不是通过 Homebrew 安装的版本。这可能导致了 <code>hexo-deployer-git</code> 插件无法正确调用 Git。</p><h3 id="3-在-macOS-安装-Homebrew"><a class="header-anchor" href="#3-在-macOS-安装-Homebrew"> </a>3. 在 macOS 安装 Homebrew</h3><h4 id="官网安装"><a class="header-anchor" href="#官网安装"> </a>官网安装</h4><p>访问 <a href="https://brew.sh/">Homebrew 官网</a>，获取最新的安装命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure><p>复制并粘贴到终端中执行，Homebrew 将自动下载并安装。</p><h4 id="大陆镜像源安装"><a class="header-anchor" href="#大陆镜像源安装"> </a>大陆镜像源安装</h4><p>由于某些地区（如中国大陆）访问 GitHub 时可能会受到限制，导致安装 Homebrew 或通过 Homebrew 下载软件包时速度缓慢或失败。可以使用清华大学提供的 Homebrew 的镜像源来解决这个问题。通过先设置镜像源，然后安装 Homebrew。</p><ul><li>设置 Homebrew 使用清华镜像：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/bin/bash -c <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/install.sh)</span>&quot;</span><br></code></pre></td></tr></table></figure></li></ul><h4 id="测试是否安装成功"><a class="header-anchor" href="#测试是否安装成功"> </a>测试是否安装成功</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew --version<br></code></pre></td></tr></table></figure><h4 id="如果需更新版本"><a class="header-anchor" href="#如果需更新版本"> </a>如果需更新版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew update<br></code></pre></td></tr></table></figure><ul><li><p>如果更新时发现以下错误：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">(base) artin@Artins-MacBook-Air homebrew % brew update<br><br>Error: /opt/homebrew is not writable. You should change the<br>ownership and permissions of /opt/homebrew back to your<br>user account:<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R artin /opt/homebrew<br></code></pre></td></tr></table></figure></li><li><p>这个错误表明 <code>/opt/homebrew</code> 目录的所有权不属于当前用户 <code>artin</code>，导致无法进行更新。你可以按照提示的步骤，使用 <code>chown</code> 命令更改该目录的所有权。具体操作如下：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R artin /opt/homebrew<br></code></pre></td></tr></table></figure></li></ul><p>再次尝试<code>brew update</code>即可。</p><h3 id="4-安装-Git"><a class="header-anchor" href="#4-安装-Git"> </a>4. 安装 Git</h3><h4 id="检查-git-仓库"><a class="header-anchor" href="#检查-git-仓库"> </a>检查 git 仓库</h4><ul><li>成功安装Homebrew检查git仓库是否完整：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /opt/homebrew<br>git status<br></code></pre></td></tr></table></figure><ul><li><p>或许会出现下面错误：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">fatal: detected dubious ownership <span class="hljs-keyword">in</span> repository at <span class="hljs-string">&#x27;/opt/homebrew&#x27;</span><br>To add an exception <span class="hljs-keyword">for</span> this directory, call:<br>git config --global --add safe.directory /opt/homebrew<br></code></pre></td></tr></table></figure><p>这个错误是因为 Git 检测到 <code>/opt/homebrew</code> 目录的所有权不匹配或不安全（通常发生在文件系统上的权限问题）。Git 出于安全原因默认会阻止不安全的目录操作，你可以通过添加目录为“安全”目录来解决这个问题。<br>运行以下命令来将 <code>/opt/homebrew</code> 目录添加为 Git 的安全目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global --add safe.directory /opt/homebrew<br></code></pre></td></tr></table></figure></p><p>然后，重新运行 <code>git status</code> 来检查仓库的状态，你可能会看到如下内容：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">(base) artin@Artins-MacBook-Air homebrew % git status<br><br>On branch master<br>Your branch is up to <span class="hljs-built_in">date</span> with <span class="hljs-string">&#x27;origin/master&#x27;</span>.<br><br>nothing to commit, working tree clean<br></code></pre></td></tr></table></figure></li></ul><h4 id="安装-Git"><a class="header-anchor" href="#安装-Git"> </a>安装 Git</h4><ul><li><p>通过 Homebrew 安装 Git：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew install git<br></code></pre></td></tr></table></figure><p>这会安装最新的 Git 版本，并确保你在 Hexo 部署过程中使用的是更新版本的 Git。</p></li><li><p>检查git的系统路径<br>确保 Homebrew 的路径正确，并且 git 能够从终端找到。你可以检查 git 是否已正确安装在 PATH 中：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> git<br></code></pre></td></tr></table></figure><p>此时我发现有两个git，一个是Apple的MacBookAir自带的，另一个是Homebrew下载的。首先确认 Git 是否通过 Homebrew 安装，运行以下命令：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">brew list git<br></code></pre></td></tr></table></figure><ul><li><p>如果结果为空，说明 Git 不是通过 Homebrew 安装的。</p></li><li><p>如果返回路径，说明 Git 是通过 Homebrew 安装的。</p></li><li><p>如果发现以下错误：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">(base) artin@Artins-MacBook-Air ~ % brew list git<br>Error: No such keg: /opt/homebrew/Cellar/git<br></code></pre></td></tr></table></figure></li></ul><p>首先，确保 Homebrew 安装的 Git 是在 <code>/opt/homebrew/bin/git</code> 路径下。你可以使用以下命令检查 Homebrew Git 的安装路径：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> -a git<br></code></pre></td></tr></table></figure></li><li><p>将 Git 添加到环境变量<br>这将列出所有 Git 可执行文件的路径。如果你看到 <code>/opt/homebrew/bin/git</code> 路径，那么我们就可以将其优先加载。<br>需要修改你的 PATH 环境变量。编辑你的 ~/.zshrc 配置文件（如果你使用的是 Zsh shell）：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano ~/.zshrc<br></code></pre></td></tr></table></figure><p>在文件末尾添加以下内容：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=<span class="hljs-string">&quot;/opt/homebrew/bin:<span class="hljs-variable">$PATH</span>&quot;</span><br></code></pre></td></tr></table></figure><p>如果你使用 <code>nano</code>，按 <code>Ctrl + X</code>，然后按 <code>Y</code> 确认保存，最后按 <code>Enter</code> 退出.<br>重新加载配置文件：</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc  <span class="hljs-comment"># 如果你使用 zsh</span><br></code></pre></td></tr></table></figure></li><li><p>验证Git</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs BASH"><span class="hljs-built_in">which</span> git<br>git --version<br></code></pre></td></tr></table></figure><p>你应该看到 <code>/opt/homebrew/bin/git</code> 路径下有git版本号出现。</p></li></ul><p>现在应该可以成功通过以下代码部署项目到GitHub上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo g<br>hexo d<br></code></pre></td></tr></table></figure><p>如果还有链接还是有问题，可以试着将本地文件备份，并删除 Github 所以内容，删除 Token, 从 Token 更换为SSH认证的方式，提升连接和部署效率。详细教程在下一章，手把手教程。</p><h3 id="经验总结："><a class="header-anchor" href="#经验总结："> </a>经验总结：</h3><ul><li><strong>Hexo 部署的关键点：</strong> 确保 Git 配置正确，尤其是在使用 GitHub 部署时，建议使用 SSH 而非 HTTPS。为此，需要生成并配置 SSH 密钥。</li><li><strong>使用 Homebrew 安装 Git：</strong> macOS 默认的 Git 版本可能存在兼容性问题，因此建议通过 Homebrew 安装和管理 Git 版本。</li><li><strong>GitHub 配置：</strong> 如果遇到与 GitHub 连接的问题，首先检查 SSH 配置，并确保 SSH 密钥已正确添加到 GitHub 中。</li><li><strong>错误调试：</strong> 在遇到部署错误时，仔细查看错误信息，通常能够提供解决问题的线索，比如此处的 <code>Spawn failed</code> 错误，提示 Git 配置问题。</li></ul><p>如果在部署过程中遇到类似问题，可以参考此解决流程来排查和修复。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>GitHub</tag>
      
      <tag>Error</tag>
      
      <tag>Git</tag>
      
      <tag>Homebrew</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>”分类“中文章按时间排序</title>
    <link href="/2025/01/16/1-%E5%88%86%E7%B1%BB%E5%86%85%E6%96%87%E7%AB%A0%E6%8C%89%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/"/>
    <url>/2025/01/16/1-%E5%88%86%E7%B1%BB%E5%86%85%E6%96%87%E7%AB%A0%E6%8C%89%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<p>找到Fluid主题下<code>_config.yml</code>文件，搜索<code>category page</code>,可以看到:</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_order_by:</span> <span class="hljs-string">&quot;-date&quot;</span><br></code></pre></td></tr></table></figure><p>文章的排序字段，前面带减号是倒序，不带减号是正序.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">post_order_by:</span> <span class="hljs-string">&quot;date&quot;</span><br></code></pre></td></tr></table></figure><p>可以看到<code>菜单栏 - 分类 - 博客</code> 中文章原本排序为：<br><code>3.AAA 2.BBB 1.CCC</code><br>现在为：<br><code>1.CCC 2.BBB 3.AAA</code></p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章显示“更新”标志</title>
    <link href="/2025/01/14/1-%E6%96%87%E7%AB%A0%E6%98%BE%E7%A4%BA%E6%9B%B4%E6%96%B0%E6%A0%87%E5%BF%97/"/>
    <url>/2025/01/14/1-%E6%96%87%E7%AB%A0%E6%98%BE%E7%A4%BA%E6%9B%B4%E6%96%B0%E6%A0%87%E5%BF%97/</url>
    
    <content type="html"><![CDATA[<p>博客中，您可能希望标记哪些文章最近更新过，以便读者更方便地识别最新内容。本文将教您如何添加一个“Updated”标志，并基于更新时间动态隐藏标志（如超过 7 天后隐藏）。</p><ol><li>使用文章的 <code>updated</code> 属性判断文章是否有更新。</li><li>在模板中为“Updated”标志添加 <code>data-updated</code> 属性，记录更新时间。</li><li>使用 JavaScript 脚本，在页面加载时计算更新时间与当前时间的差距，动态控制标志的显示或隐藏。</li><li>使用 CSS 为“Updated”标志添加样式。</li></ol><hr><h3 id="步骤-1：修改文章模板"><a class="header-anchor" href="#步骤-1：修改文章模板"> </a><strong>步骤 1：修改文章模板</strong></h3><p>我们需要在文章列表模板中添加“Updated”标志。找到 <code>index.ejs</code>（首页），通常路径：<code>themes/fluid/layout/index.ejs</code></p><p>在模板文件中找到<code>index-btm post-metas</code>（如日期显示的位置), 插入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;div class=&quot;index-btm post-metas&quot;&gt;<br>  &lt;% if (theme.index.post_meta.date) &#123; %&gt;<br>    &lt;div class=&quot;post-meta&quot;&gt;<br>      &lt;i class=&quot;iconfont icon-date&quot;&gt;&lt;/i&gt;<br>      &lt;time datetime=&quot;&lt;%= full_date(post.date, &#x27;YYYY-MM-DD HH:mm&#x27;) %&gt;&quot; pubdate&gt;<br>        &lt;%- date(post.date, config.date_format) %&gt;<br>      &lt;/time&gt;<br><br>      &lt;%# -------- 加入以下内容 --------%&gt;<br>      &lt;% if (post.updated) &#123; %&gt;<br>        &lt;% const updatedDays = (new Date() - new Date(post.updated)) / (1000 * 60 * 60 * 24); %&gt;<br>        &lt;% if (updatedDays &lt;= 7) &#123; %&gt;<br>          &lt;span class=&quot;updated-flag&quot; data-updated=&quot;&lt;%= post.updated.toISOString() %&gt;&quot;&gt;Updated within 7 days&lt;/span&gt;<br>        &lt;% &#125; %&gt;<br>      &lt;% &#125; %&gt;<br>      &lt;%# ----------------------------%&gt;<br><br>    &lt;/div&gt;<br>  &lt;% &#125; %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></figure><blockquote><p><code>span</code>标签显示”Updated within 7 days“，也可以换成”Updated“ 或者”更新“。</p></blockquote><h4 id="代码解析"><a class="header-anchor" href="#代码解析"> </a>代码解析</h4><ol><li><strong><code>post.updated</code></strong>：检查文章是否有 <code>updated</code> 属性。</li><li><strong>计算时间差</strong>：<code>(new Date() - new Date(post.updated)) / (1000 * 60 * 60 * 24)</code> 将更新时间差转换为天数。</li><li><strong>判断 7 天内</strong>：如果更新时间差小于等于 7 天，显示“Updated”标志。</li><li><strong><code>data-updated</code> 属性</strong>：将更新时间以 ISO 格式写入 <code>data-updated</code>，供 JavaScript 使用。</li></ol><h3 id="步骤-2：创建动态脚本"><a class="header-anchor" href="#步骤-2：创建动态脚本"> </a><strong>步骤 2：创建动态脚本</strong></h3><p>在主题的 <code>source/js/</code> 文件夹中创建一个新的文件 <code>update-flag.js</code>，用于动态隐藏过期的标志。</p><p>文件路径：<code>themes/fluid/source/js/update-flag.js</code></p><p>添加以下代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;DOMContentLoaded&quot;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;DOM fully loaded&quot;</span>);<br>  <span class="hljs-keyword">const</span> updateFlags = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">querySelectorAll</span>(<span class="hljs-string">&#x27;.updated-flag&#x27;</span>);<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Found updated flags:&quot;</span>, updateFlags);<br><br>  <span class="hljs-keyword">const</span> expiryDays = <span class="hljs-number">7</span>; <span class="hljs-comment">// 设置有效期为 7 天</span><br>  <span class="hljs-keyword">const</span> expiryTime = expiryDays * <span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>; <span class="hljs-comment">// 转换为毫秒</span><br><br>  updateFlags.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">flag</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> updatedDate = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(flag.<span class="hljs-property">dataset</span>.<span class="hljs-property">updated</span>); <span class="hljs-comment">// 从 data-updated 获取时间</span><br>    <span class="hljs-keyword">const</span> timeDiff = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>() - updatedDate.<span class="hljs-title function_">getTime</span>(); <span class="hljs-comment">// 当前时间与更新时间的差</span><br><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Article updated on: <span class="hljs-subst">$&#123;updatedDate&#125;</span>, Time difference: <span class="hljs-subst">$&#123;timeDiff / (<span class="hljs-number">1000</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * <span class="hljs-number">24</span>)&#125;</span> days`</span>);<br><br>    <span class="hljs-keyword">if</span> (timeDiff &gt; expiryTime) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;Hiding outdated updated flag&quot;</span>);<br>      flag.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = <span class="hljs-string">&#x27;none&#x27;</span>; <span class="hljs-comment">// 隐藏过期标志</span><br>    &#125;<br>  &#125;);<br>&#125;);<br></code></pre></td></tr></table></figure><h3 id="步骤-3：确保脚本被加载"><a class="header-anchor" href="#步骤-3：确保脚本被加载"> </a><strong>步骤 3：确保脚本被加载</strong></h3><p>在主题的 <code>scripts.ejs</code> 文件中。<br>通常位于 <code>themes/fluid/layout/_partial/scripts.ejs</code>），添加对 <code>update-flag.js</code> 的引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/update-flag.js&quot;</span> <span class="hljs-attr">defer</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></figure><p><code>defer</code> 确保脚本在页面内容加载完成后执行。</p><h3 id="步骤-4：定义样式"><a class="header-anchor" href="#步骤-4：定义样式"> </a><strong>步骤 4：定义样式</strong></h3><p>为“Updated”标志添加样式，使其在页面上显眼且美观。找到主题的 CSS 文件。<br>通常是<code>themes/fluid/source/css/_pages/_base/color-schema.styl</code>，在文件末尾添加以下代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.updated-flag</span> &#123;<br>  <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ff0000</span>; <span class="hljs-comment">/* 红色背景 */</span><br>  <span class="hljs-attribute">color</span>: white;             <span class="hljs-comment">/* 白色文字 */</span><br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.8em</span>;         <span class="hljs-comment">/* 小字号 */</span><br>  <span class="hljs-attribute">padding</span>: <span class="hljs-number">2px</span> <span class="hljs-number">5px</span>;         <span class="hljs-comment">/* 内边距 */</span><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">3px</span>;       <span class="hljs-comment">/* 圆角 */</span><br>  <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">5px</span>;         <br>&#125;<br></code></pre></td></tr></table></figure><p>虽然<code>styl</code>文件支持css，但是以防万一，可以使用以下代码：</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs styl"><span class="hljs-selector-class">.updated-flag</span><br>  <span class="hljs-attribute">background-color</span> <span class="hljs-number">#5d8744</span><br>  <span class="hljs-attribute">color</span> white<br>  <span class="hljs-attribute">font-size</span> <span class="hljs-number">0.8em</span><br>  <span class="hljs-attribute">padding</span> <span class="hljs-number">2px</span> <span class="hljs-number">5px</span><br>  <span class="hljs-attribute">border-radius</span> <span class="hljs-number">3px</span><br>  <span class="hljs-attribute">margin-left</span> <span class="hljs-number">5px</span> <br></code></pre></td></tr></table></figure><h3 id="步骤-5：测试并验证"><a class="header-anchor" href="#步骤-5：测试并验证"> </a><strong>步骤 5：测试并验证</strong></h3><h4 id="1-创建测试文件"><a class="header-anchor" href="#1-创建测试文件"> </a>1. <strong>创建测试文件</strong></h4><p>在<code>source/_posts</code>下面创建文章<code>test.md</code>。修改某篇文章的 Front Matter，让 <code>updated</code> 时间为近期或较早的日期，此文章超过7天，<code>updated</code>标志消失，可以修改其文章已测试显示<code>updated</code>：</p>   <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">test</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2025-01-01</span><br><span class="hljs-attr">updated:</span> <span class="hljs-number">2025-01-08</span><br></code></pre></td></tr></table></figure><h4 id="2-生成和部署"><a class="header-anchor" href="#2-生成和部署"> </a>2. <strong>生成和部署</strong></h4><p>运行以下命令生成并查看网站：</p>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean<br>hexo generate<br>hexo server<br></code></pre></td></tr></table></figure><h4 id="验证效果"><a class="header-anchor" href="#验证效果"> </a><strong>验证效果</strong></h4><ul><li>如果文章的更新时间在 7 天内，页面应显示“Updated”标志。</li><li>如果超过 7 天，标志应动态隐藏。</li></ul><p>希望本教程能帮助你优化博客的用户体验！如有任何问题，欢迎留言交流！ 🚀</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>HTML</tag>
      
      <tag>js</tag>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客搭建</title>
    <link href="/2025/01/13/1-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <url>/2025/01/13/1-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>我创建了个人博客网站，基于 GitHub Pages 作为开源服务器，使用 Hexo 作为博客框架，Fluid 主题为界面设计。博客中使用 LeanCloud 作为阅读量统计工具，通过 GitHub 或者自己服务器进行部署。此博客网站完全免费，适合需要搭建个人博客的用户。</p><blockquote><p>此部分内容基于<a href="https://blog.csdn.net/yaorongke/article/details/119089190">CSDN博客作者</a>的介绍。 以下为过程简述并添加注意部分。同时推荐阅读<a href="https://hexo.fluid-dev.com/docs/guide/">Hexo Fluid用户手册</a>进行个性化设置，还可以参考官方的展示博客<a href="https://hexo.fluid-dev.com/">Hexo Theme Fluid</a>获得创造灵感。</p></blockquote><hr><h3 id="1-在-GitHub-上创建一个新仓库"><a class="header-anchor" href="#1-在-GitHub-上创建一个新仓库"> </a>1. <strong>在 GitHub 上创建一个新仓库</strong></h3><ul><li>在 GitHub 上创建一个新的代码仓库，名称必须为 <code>&lt;您的GitHub用户名&gt;.github.io</code>，例如 <code>artintyt.github.io</code>。</li><li>创建成功后，您将拥有一个可以访问的页面 <code>https://artintyt.github.io</code>，这是您的博客网站的基础。</li><li>注意：branch设置为main。可以先在仓库写个初始页面来测试地址正常打开。</li></ul><h3 id="2-安装-Hexo-和设置博客"><a class="header-anchor" href="#2-安装-Hexo-和设置博客"> </a>2. <strong>安装 Hexo 和设置博客</strong></h3><ul><li>在您的电脑上安装 <strong>Node.js</strong> 和 <strong>Git</strong>（如文章中的准备工作部分所述）。</li><li>注意：用终端安装时，先通过指令到达自己新建的 my-blog文件夹。</li><li>使用以下命令安装 Hexo：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure></li><li>创建一个 Hexo 项目：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo init my-blog<br><span class="hljs-built_in">cd</span> my-blog<br>npm install<br></code></pre></td></tr></table></figure></li><li>启动服务器<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g<br>hexo server<br></code></pre></td></tr></table></figure></li><li>测试页面是否正常启动：<a href="http://localhost:4000">http://localhost:4000</a></li></ul><h3 id="3-更换-Hexo-主题为-Fluid"><a class="header-anchor" href="#3-更换-Hexo-主题为-Fluid"> </a>3. <strong>更换 Hexo 主题为 Fluid</strong></h3><ul><li>在 Hexo 博客目录中安装您喜欢的主题（例如 <strong>Fluid</strong> 主题）：<ul><li>下载并解压 Fluid 主题至<code>my-blog</code>下面的 <code>themes</code> 文件夹</li><li>修改 Hexo 配置文件 <code>_config.yml</code>，设置主题为 <code>fluid</code>：<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span><br></code></pre></td></tr></table></figure></li><li>配置文件 <code>_config.yml</code>配置博客语言、标题等个性化信息。</li><li>注意，有两个配置文件：<ul><li><code>my-blog</code>下面的是Hexo框架的配置文件</li><li><code>fluid</code>下面的是fluid主题的配置文件</li></ul></li></ul></li><li>启动本地服务器,并访问地址: <a href="http://localhost:4000">http://localhost:4000</a></li></ul><pre><code class="hljs"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g -d<br>hexo s<br></code></pre></td></tr></table></figure></code></pre><h3 id="4-配置-LeanCloud-统计网址阅读量和访问人数"><a class="header-anchor" href="#4-配置-LeanCloud-统计网址阅读量和访问人数"> </a>4. <strong>配置 LeanCloud 统计网址阅读量和访问人数</strong></h3><ul><li>注册 <strong>LeanCloud</strong> ，从<code>设置 - 应用凭证</code>中获取 <code>AppID</code> 和 <code>AppKey</code>。</li><li>配置您的 Hexo 主题，打开 <code>themes/fluid/_config.yml</code> 文件，添加 LeanCloud 的 <code>AppID</code> 和 <code>AppKey</code>，开启阅读量统计和评论功能。</li></ul><h3 id="5-创建博客文章"><a class="header-anchor" href="#5-创建博客文章"> </a>5. <strong>创建博客文章</strong></h3><ul><li>使用 Hexo 命令创建新文章：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new post <span class="hljs-string">&quot;我的第一篇博客&quot;</span><br></code></pre></td></tr></table></figure></li><li>在 <code>source/_posts</code> 文件夹中编辑文章内容（Markdown/html 格式）。文件以<code>.md</code>结尾。</li><li>图片等文件可以放在 <code>source/images</code> 目录下。</li></ul><h3 id="6-部署博客到-GitHub-Pages"><a class="header-anchor" href="#6-部署博客到-GitHub-Pages"> </a>6. <strong>部署博客到 GitHub Pages</strong></h3><ul><li>配置 GitHub 仓库为 Hexo 的发布目标，将访问令牌存储在环境变量中，避免直接写入配置文件。在 <code>_config.yml</code> 中添加以下配置：  <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://&lt;您的GitHub用户名&gt;:$&#123;GH_TOKEN&#125;@github.com/&lt;您的GitHub用户名&gt;/&lt;您的博客网址&gt;.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br></code></pre></td></tr></table></figure></li><li>我们将<code>repo</code>的敏感部分替换为环境变量。在终端中设置环境变量 <code>GH_TOKEN</code>：</li></ul><pre><code class="hljs"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> GH_TOKEN=ghp_xxxx<br></code></pre></td></tr></table></figure></code></pre><blockquote><p><strong>注意</strong>: 此环境变量只在当前终端会话中有效。如果需要永久生效，可以将其添加到 <code>.bashrc</code>、<code>.zshrc</code> 或其他 Shell 配置文件中。</p></blockquote><ul><li><p>然后运行以下命令使其生效，例如，在 <code>.zshrc</code> 文件中添加：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.zshrc<br></code></pre></td></tr></table></figure></li><li><p>安装部署插件并部署：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br>hexo g -d<br></code></pre></td></tr></table></figure></li><li><p>访问 <code>https://&lt;您的GitHub用户名&gt;.github.io</code> 查看您的博客。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AI基础概念</title>
    <link href="/2025/01/12/2-AI%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/"/>
    <url>/2025/01/12/2-AI%E5%9F%BA%E7%A1%80%E6%A6%82%E5%BF%B5/</url>
    
    <content type="html"><![CDATA[<p>什么是AI（Artificial intelligence 人工智能）：通过机器学习，深度学习等算法，使得系统具备学习、推理、自我修正和解决问题等功能。</p><ul><li>语言</li><li>语音</li><li>视觉</li><li>多模态感知和决策</li></ul><p><em>意图识别；情绪识别；表情识别</em></p><h2 id="NL-自然语言"><a class="header-anchor" href="#NL-自然语言"> </a>NL 自然语言</h2><h3 id="NLP-自然语言处理"><a class="header-anchor" href="#NLP-自然语言处理"> </a>NLP 自然语言处理</h3><p>自然语言处理（Natural Language Processing, NLP）是人工智能的一个子领域，致力于实现计算机对人类语言的理解、和生成。包含从<em>文本处理</em>到<em>语音识别</em>的广泛任务。</p><p>例子:</p><ul><li>文本分类: 电子邮件过滤系统可以使用NLP来自动将邮件分类为“垃圾邮件”或“非垃圾邮件”。</li><li>情感分析: 社交媒体监控工具可以使用NLP来分析用户评论的情感倾向（正面、负面或中性）。</li></ul><h3 id="NLU-自然语言理解"><a class="header-anchor" href="#NLU-自然语言理解"> </a>NLU 自然语言理解</h3><p>自然语言理解（Natural Language Understanding）是NLP的一个子领域，专注于使计算机能够理解人类语言的含义。NLU涉及语义分析、意图识别、实体识别等任务。</p><p>例子:</p><ul><li>意图识别: 当对语音助手说“帮我订一张明天去纽约的机票”，系统需要识别用户的意图是“订票”。</li><li>实体识别: 在同一句话中，系统需要识别出“纽约”是一个地名，“明天”是一个时间表达。</li></ul><h3 id="NLG-自然语言生成"><a class="header-anchor" href="#NLG-自然语言生成"> </a>NLG 自然语言生成</h3><p>自然语言生成（Natural Language Generation）是NLP的另一个子领域，专注于计算机能生成人类的语言, 非常贴近真人说话的方式。NLG通常用于自动报告生成、内容创作等场景。<br>例子:</p><ul><li>自动报告: 金融分析工具可以使用NLG来生成每日或每周的市场分析报告。</li><li>内容创作: 新闻自动写作系统可以根据输入的数据生成新闻文章，如体育比赛的赛后报道。</li></ul><h4 id="具体例子"><a class="header-anchor" href="#具体例子"> </a>具体例子</h4><p>假设智能语音助手（如Siri或Alexa）</p><ol><li>用户输入: 明天的天气怎么样？</li><li>NLP:<ul><li>语音识别: 将语言转换为文本.</li><li>文本预处理: 来清理和规范化文本,去除空格或标点.</li></ul></li><li>NLU:<ul><li>意图识别: 首先识别用户意图&quot;询问天气&quot;.</li><li>实体识别: 再识别出&quot;明天&quot;是时间相关实体.</li></ul></li><li>数据处理: 系统查询天气数据库, 获取&quot;明天&quot;的天气信息.</li><li>NLG:<ul><li>生成文本: 将查询结果转换为自然语言文本:&quot;明天是晴天,最高10度,最低-5度,要注意保暖哦&quot;.</li><li>语音合成: 将文本转换为语音,并播放给用户听.</li></ul></li></ol><h2 id="监督学习-Supervised-Learning"><a class="header-anchor" href="#监督学习-Supervised-Learning"> </a>监督学习(Supervised Learning)</h2><p>监督学习是一种机器学习方法，模型通过已知的输入和输出数据进行训练，直到模型能够准确地匹配输入和输出的关系。</p><h3 id="分类（Classification）"><a class="header-anchor" href="#分类（Classification）"> </a>分类（Classification）</h3><p>分类任务是将输入数据分为离散的类别。</p><ul><li>例子：垃圾邮件过滤。给定一封电子邮件，模型需要判断这封邮件是垃圾邮件（spam）还是正常邮件（ham）。</li></ul><h3 id="回归（Regression）"><a class="header-anchor" href="#回归（Regression）"> </a>回归（Regression）</h3><p>回归任务是预测连续的数值输出。</p><ul><li>例子：房价预测。根据特征（如房子的面积、位置等），模型预测房子的价格。</li></ul><h3 id="关联规则（Association-Rule）"><a class="header-anchor" href="#关联规则（Association-Rule）"> </a>关联规则（Association Rule）</h3><p>关联规则是寻找数据中不同项之间的关系或模式。</p><ul><li>例子：购物篮分析。超市可以通过关联规则发现哪些商品常常一起被购买，比如“如果顾客买了面包和黄油，他们也很可能会买牛奶”。</li></ul><h2 id="无监督学习（Unsupervised-Learning）"><a class="header-anchor" href="#无监督学习（Unsupervised-Learning）"> </a>无监督学习（Unsupervised Learning）</h2><p>无监督学习是一种机器学习方法，模型在没有标签数据（即没有输入和输出配对）的情况下，通过数据内部的结构进行学习。</p><h3 id="聚类（Clustering）"><a class="header-anchor" href="#聚类（Clustering）"> </a>聚类（Clustering）</h3><p>聚类任务是将数据分成不同的组，每个组中的数据项彼此相似。</p><ul><li>例子：客户细分。根据购买行为的数据，商业可以将客户分成不同的群体，比如“大宗购买者”、“偶尔购买者”等。</li></ul><h2 id="强化学习（Reinforcement-Learning）"><a class="header-anchor" href="#强化学习（Reinforcement-Learning）"> </a>强化学习（Reinforcement Learning）</h2><p>强化学习是一种机器学习方法，其中一个<strong>智能体（Agent</strong>通过与**环境（Environment）**互动，以试错的方式学习如何完成任务或达到目标。</p><blockquote><p>个人感觉和Stochastic Optimisation很像，如果学过会很快理解这个部分。</p></blockquote><h3 id="核心概念："><a class="header-anchor" href="#核心概念："> </a>核心概念：</h3><ol><li>状态（States）：状态是对当前环境的一种描述。在任何时刻，Agent所处的状态反映了当前的环境情况。</li></ol><ul><li>例子：在一个迷宫游戏中，state可以是agent当前所在的位置；在围棋中，状态就是棋盘上每颗棋子的布局。</li></ul><ol start="2"><li>奖励（Reward）：奖励是对agent在某个state下采取某个动作后的反馈，它可以是<strong>正的</strong>（奖励）或<strong>负的</strong>（惩罚）。</li></ol><ul><li>例子：在迷宫游戏中，如果智能体走到正确的方向，可以获得正的奖励（例如+10分）；如果撞到墙壁，可能会获得<strong>负的奖励</strong>（例如-10分，也就是惩罚）。</li></ul><ol start="3"><li>智能体（Agent）：智能体是执行动作并接收reward的决策者。agent通过不断地选择动作来改变其state，从而尝试最大化累计reward。</li></ol><ul><li>例子：在自动驾驶汽车中，智能体就是控制汽车行驶的算法；在游戏中，智能体就是玩家控制的角色或者对手AI。</li></ul><h3 id="强化学习的过程："><a class="header-anchor" href="#强化学习的过程："> </a>强化学习的过程：</h3><ol><li>观察：agent观察当前的state。</li><li>选择动作：根据当前state，agent选择一个动作。这个动作可能基于之前的学习，也可能是一个随机选择。</li><li>执行动作：agent执行所选择的动作，环境随之发生改变。</li><li>获取反馈：环境向agent提供执行该动作后的新state和即时reward。</li><li>更新策略：agent根据reward更新其策略，使其在未来选择更优的动作，以获得更多的累计reward。</li></ol><h3 id="一个简单的例子："><a class="header-anchor" href="#一个简单的例子："> </a>一个简单的例子：</h3><p>玩具汽车学习走迷宫</p><ol><li>状态（States）：玩具汽车在迷宫中的位置，例如（2, 3）代表在迷宫中第二行第三列的位置。</li><li>动作（Actions）：玩具汽车可以前进的方向，例如上、下、左、右。</li><li>奖励（Reward）：如果玩具汽车朝着出口前进，它获得一个正的奖励（+10分）；如果撞到死胡同或墙，则获得负的奖励（-10分）。</li><li>智能体（Agent）：控制玩具汽车的AI</li></ol><h2 id="机器学习效果评估"><a class="header-anchor" href="#机器学习效果评估"> </a>机器学习效果评估</h2><h3 id="欠拟合-Under-fitting"><a class="header-anchor" href="#欠拟合-Under-fitting"> </a>欠拟合 (Under-fitting)</h3><p>欠拟合是指模型过于简单，无法捕捉到训练数据中的模式和特征，导致在训练数据和新数据上的表现都很差。</p><ul><li><strong>实际例子</strong>：在房价预测问题中，你只用房子的面积一个特征来预测价格，而忽略了位置、房龄、装修等重要特征，导致模型无法准确预测房价</li></ul><h3 id="最佳拟合-Optimal-fitting"><a class="header-anchor" href="#最佳拟合-Optimal-fitting"> </a>最佳拟合 (Optimal-fitting)</h3><p>最佳拟合是指模型恰当地捕捉到了训练数据中的模式和特征，同时也能很好地应用于新数据。这种情况下，模型在训练数据和测试数据上都有良好的表现。</p><ul><li><strong>实际例子</strong>：在房价预测问题中，你考虑了多个重要特征（如面积、位置、房龄、装修等），模型能够准确预测训练数据中的房价，并在新数据上表现也很好。</li></ul><h3 id="过拟合-Over-fitting"><a class="header-anchor" href="#过拟合-Over-fitting"> </a>过拟合 (Over-fitting)</h3><p>过拟合是指模型过于复杂，过度地记住了训练数据中的每一个细节和噪声，从而失去了对新数据的泛化能力。过拟合的模型在训练数据上表现很好，但在新数据上表现较差。</p><ul><li><strong>实际例子</strong>：在房价预测问题中，你不仅使用了面积、位置、房龄、装修等特征，还加入了一些不相关的特征（如前几天是否下过雨），模型在训练数据上表现非常好，但在新数据上预测效果很差。</li></ul><h3 id="总结："><a class="header-anchor" href="#总结："> </a>总结：</h3><ol><li>欠拟合 (Under-fitting)：模型太简单，不能很好地捕捉数据中的模式。</li></ol><ul><li>简单例子：用直线拟合“U”形数据。</li><li>实际例子：房价预测中只用面积一个特征。</li></ul><ol start="2"><li>最佳拟合 (Optimal-fitting)：模型恰到好处，既能很好地拟合训练数据，也能对新数据有良好表现。</li></ol><ul><li>简单例子：用合适的二次曲线拟合“U”形数据。</li><li>实际例子：房价预测中使用了多个重要特征。</li></ul><ol start="3"><li>过拟合 (Over-fitting)：模型太复杂，过度记住了训练数据，无法泛化到新数据。</li></ol><ul><li>简单例子：用复杂的高次多项式拟合“U”形数据，过度拟合了每个数据点。</li><li>实际例子：房价预测中加入了很多不相关特征，结果在新数据上效果不好。<br>总之，目标是找到让模型最佳拟合训练数据和测试数据的平衡点，既不过于简单也不过于复杂。</li></ul><h2 id="深度学习-Deep-Learning"><a class="header-anchor" href="#深度学习-Deep-Learning"> </a>深度学习 (Deep Learning)</h2><p>深度学习是一种机器学习方法，它利用多层神经网络进行复杂的数据处理和模式识别。在理解深度学习时，我们需要了解神经网络的三种关键层：</p><ul><li>输入层（Input Layer）: 接收原始数据.</li><li>隐藏层（Hidden Layer）: 提取和转换输入数据的特征。</li><li>输出层（Output Layer）: 给出预测结果。</li></ul><p>通过这些层的协同工作，神经网络能够从原始数据中学习模式，并对新数据进行准确的预测或分类。神经网络（Neural Network）是模仿人脑工作原理的一种算法，由多个互相连接的节点（也叫神经元）组成。这些节点被组织成不同的层，通过层与层之间的连接和权重调整来处理数据。</p><h3 id="输入层-Input-Layer"><a class="header-anchor" href="#输入层-Input-Layer"> </a>输入层 (Input Layer)</h3><p>输入层是神经网络的第一个层，它接收原始的数据输入。这些输入可以是图像的像素值、文本的词向量或其他形式的数据。输入层的节点（或神经元）数目取决于输入数据的特征数。</p><ul><li>例子：<ul><li><strong>图像分类：</strong> 如果你有一张28x28像素的灰度图像作为输入，输入层将有28×28=784个节点，每个节点代表一个像素值。</li><li><strong>房价预测：</strong> 如果你有五个特征（如面积、位置、房龄等），输入层将有5个节点，每个节点代表一个特征值。</li></ul></li></ul><h3 id="隐藏层-Hidden-Layer"><a class="header-anchor" href="#隐藏层-Hidden-Layer"> </a>隐藏层 (Hidden Layer)</h3><p><strong>隐藏层</strong>位于输入层和输出层之间，负责对输入数据进行特征提取和变换。隐藏层可以有一层或多层，称为“深度”正是因为有许多隐藏层。每个隐藏层通过与前一层和后一层的连接（权重和偏置）来传递信息。</p><ul><li>例子：<ul><li><strong>图像分类：</strong> 何将28x28像素的输入映射到更加抽象的特征层，如第一层可能识别边缘，第二层可能识别更复杂的形状。</li><li><strong>房价预测：</strong> 隐藏层可以捕捉输入特征的复杂非线性关系，帮助模型准确预测房价。</li></ul></li></ul><h3 id="输出层-Output-Layer"><a class="header-anchor" href="#输出层-Output-Layer"> </a>输出层 (Output Layer)</h3><p><strong>输出层</strong>是神经网络的最后一层，它给出模型的最终预测结果。输出层的节点数目和类型取决于具体的任务。</p><ul><li>例子：<ul><li><strong>图像分类：</strong> 如果你要把图像分类为10个类别（如手写数字0-9），输出层将有10个节点，每个节点代表一个类别的概率。</li><li><strong>房价预测：</strong> 如果你需要预测房价，输出层将有一个节点，它输出房价的预测值。</li></ul></li></ul><h3 id="综合例子"><a class="header-anchor" href="#综合例子"> </a>综合例子</h3><h4 id="任务：图像分类"><a class="header-anchor" href="#任务：图像分类"> </a>任务：图像分类</h4><ol><li><strong>输入层</strong>：假设我们分类的是28x28像素的手写数字图像。<ul><li><strong>输入层节点数：</strong> 784个节点，每个节点对应一个像素值。</li></ul></li><li><strong>隐藏层</strong>：假设有两层隐藏层。<ul><li><strong>第一隐藏层：</strong> 提取简单特征（如边缘），设有128个节点。</li><li><strong>第二隐藏层：</strong> 提取更复杂的特征（如更高层次的形状），设有64个节点。</li></ul></li><li><strong>输出层</strong>：假设分类为10个类别（数字0到9）。<ul><li><strong>输出层节点数：</strong> 10个节点，每个节点代表图像属于某个数字类别的概率。</li></ul></li></ol><h4 id="任务：房价预测"><a class="header-anchor" href="#任务：房价预测"> </a>任务：房价预测</h4><ol><li><strong>输入层：</strong> 假设预测房价时用五个特征：面积、位置、房龄、房型、市场状况。<ul><li><strong>输入层节点数：</strong> 5个节点，每个节点代表一个特征。</li></ul></li><li><strong>隐藏层：</strong> 假设有一层隐藏层。<ul><li><strong>隐藏层：</strong> 捕捉输入特征之间的复杂关系，设有10个节点。</li></ul></li><li><strong>输出层：</strong> 输出预测的房价。<ul><li><strong>输出层节点数：</strong> 1个节点，表示预测的房价。</li></ul></li></ol><h2 id="神经网络-Neural-Networks"><a class="header-anchor" href="#神经网络-Neural-Networks"> </a>神经网络 (Neural Networks)</h2><h2 id="CNN（卷积神经网络）"><a class="header-anchor" href="#CNN（卷积神经网络）"> </a>CNN（卷积神经网络）</h2><h2 id="RNN（循环神经网络"><a class="header-anchor" href="#RNN（循环神经网络"> </a>RNN（循环神经网络)</h2><h2 id="Transformer"><a class="header-anchor" href="#Transformer"> </a>Transformer</h2><h2 id="BERT"><a class="header-anchor" href="#BERT"> </a>BERT</h2><h2 id="GPT（生成式预训练）"><a class="header-anchor" href="#GPT（生成式预训练）"> </a>GPT（生成式预训练）</h2><h2 id="向量数据库"><a class="header-anchor" href="#向量数据库"> </a>向量数据库</h2><h2 id="嵌入（Embeddings）"><a class="header-anchor" href="#嵌入（Embeddings）"> </a>嵌入（Embeddings）</h2><h2 id="LLM（大语言模型）"><a class="header-anchor" href="#LLM（大语言模型）"> </a>LLM（大语言模型）</h2><h2 id="Model-Size"><a class="header-anchor" href="#Model-Size"> </a>Model Size</h2><h2 id="OpenAI-简介"><a class="header-anchor" href="#OpenAI-简介"> </a>OpenAI 简介</h2>]]></content>
    
    
    <categories>
      
      <category>LLM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>LLM</tag>
      
      <tag>AI</tag>
      
      <tag>DL</tag>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
